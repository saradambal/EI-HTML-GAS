//<!--**********************************CUSTOMER SEARCH/UPDATE/DELETE ***********************************************************************//-->
//<!--//*******************************************FILE DESCRIPTION*********************************************//
//DONE BY PUNI
//VER 2.1-SD:08/10/2014 ED:08/10/2014,TRACKER NO:833-Corrected proloader and message box position.
//DONE BY KUMAR
//VER 2.00-SD:06/10/2014 ED:06/10/2014,TRACKER NO:833-updated proloader and message box position.
//VER 1.09-SD:13/09/2014 ED:13/09/2014,TRACKER NO:776-Did notice period validation.
//VER 1.08- SD:02/09/2014 ED:02/09/2014,TRACKER NO:776-Cleared tracker 776 comments 85 all issues.
//VER 1.07- SD:11/08/2014 ED:11/08/2014,TRACKER NO:776-implemented rollback and commit comment in script side and updated new jquery links.
//VER 1.06-SD:06-08-2014 ED:06/08/2014,TRACKER NO:776,updated terminated customer notice period date readoly format and lp and quarter as null when sd and ed both are equal or sd>ed
//VER 1.05-SD:25/07/2014 ED:25/07/2014,TRACKER NO:776,Cleared customer fee details updation issue and changed html header name and cleared intl mobile button not enable issue.
//VER 1.04-SD:17/07/2014 ED:17/07/2014,TRACKER NO:776,cleared tickler company details updation issue and entry details old value empty issue.
//VER 1.03-SD:12/07/2014 ED:12/07/2014,TRACKER NO:776,cleared checkin and checkout datepicker issue and tickler table issues html fields updated orderly.
//VER 1.02-SD:25/06/2014 ED:25/06/2014,TRACKER NO:776,Did epdate and passport validation and implemented conn failure message.
//VER 1.01-SD:07/06/2014 ED:07/06/2014,TRACKER NO:776 Changed jquery common link and css link.
//VER 1.00-SD:23/05/2014 ED:23/05/2014 TRACKER NO 776,Cleared all cal events updation issues and did new CR recheckin customer startdate updation scenario's
//VER 0.09-SD:15/05/2014 ED:15/05/2014 TRACKER NO 776,changed recver sp dynamic temp name in script and tickler deletion sp tested.
//VER 0.08-SD:13/05/2014 ED:13/04/2014 TRACKER NO 776,Changed dynamic temp fee detail table name in updation form.
//VER 0.07-SD:02/05/2014 ED:06/05/2014 TRACKER NO 776,Cleared comment 11,12,15  all issues and delivered.
//VER 0.06-SD:21/04/2014 ED:22/04/2014 TRACKER NO 776,changed table name and Restricted DP manual inputs and added preterminated customer conditions.
//VER 0.05-SD:26/03/2014 ED:26/03/2014 TRACKER NO 776,Cleared all issues and DP manual i/p restricted using class and did passport and ep no validation.
//VER 0.04-SD:09/03/2014 ED:11/03/2014 TRACKER NO 711,Changed ULD_id and removed repeated queries and used common array
//VER 0.03-SD:01/02/2014 ED:12/02/2014 TRACKER NO 711,Did all corrections and merged all temp table sp in single and added customer delete option.
//VER 0.02-ED:12/01/2014 TRACKER NO:307 ,DID header fixation
//VER 0.01-INITIAL VERSION- SD:28/10/2013 ED:,TRACKER NO:307
//*********************************************************************************************************//
try
{
  /////////////FUNCTION TO CALCULATE PRORATED BASED ON STARTDATE AND ENDDATE////////////////////
  var CSRCcustomer_id;
  var CSRCcedrecver;
  var CSRCcalendarname;
  var CSRCcheckstatusflag;
  var CSRC_expconn;
  var CSRCcalendarname;
  var CSRCfirstname;
  var CSRClastname;
  var CSRCmobile;
  var CSRCintmobile;
  var CSRCoffice;
  var CSRCmailid;
  var CSRCUnit;
  var CSRCRoomtype;
  var beforedelcalevents;
  var beforecreatecalevents;
  var afterdelcalevents;
  var aftercreatecalevents;
  var CSRC_TEMPtable;
  /////////////FUNCTION TO CALCULATE PRORATED BASED ON STARTDATE AND ENDDATE////////////////////
  function CSRC_prorated(CSRC_startdate,CSRC_enddate)
  {
    var CSRC_chkproflag="";
    CSRC_chkproflag=eilib.CUST_chkProrated(CSRC_startdate, CSRC_enddate)
    return CSRC_chkproflag;
  }
  ////////ROOM TYPE CHANGE FUNCTION
  function CSRC_Roomtype(CSRC_unit,CSRC_nullpara)
  {
    var CSRC_conn = eilib.db_GetConnection();
    var CSRC_roomtypearray =[];
    CSRC_roomtypearray=eilib.CUST_getRoomType(CSRC_conn,CSRC_unit, CSRC_nullpara);
    var CSRC_unitstart_enddate=eilib.GetUnitSdEdate(CSRC_conn,CSRC_unit);
    var startdate=eilib.SqlDateFormat(CSRC_unitstart_enddate.unitsdate)
    var enddate=eilib.SqlDateFormat(CSRC_unitstart_enddate.unitedate)
    var CSRC_unitstart_enddate_array=[startdate,enddate]
    var return_array=[CSRC_roomtypearray,CSRC_unitstart_enddate_array];
    return return_array;
    CSRC_conn.close();
  }
  function CSRC_autocompletesearchdetails(searchoptionid)
  {
    var CSRD_conn = eilib.db_GetConnection();
    var CSRD_autosearchstmt = CSRD_conn.createStatement();
    var CSRD_searchdetails_array =[];
    if(searchoptionid==18)
    {
      var autosearchquery="SELECT UASD_ACCESS_CARD FROM UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ACCESS_CARD IS NOT NULL";
    }
    if(searchoptionid==19)
    {
      var autosearchquery="SELECT DISTINCT CCD_COMPANY_NAME FROM CUSTOMER_COMPANY_DETAILS order by CCD_COMPANY_NAME ASC";
    }
    if(searchoptionid==20)
    {
      var autosearchquery="SELECT DISTINCT CPD_COMMENTS FROM CUSTOMER_PERSONAL_DETAILS order by CPD_COMMENTS ASC";
    }
    if(searchoptionid==21)
    {
      var autosearchquery="SELECT DISTINCT CONCAT(CUSTOMER_FIRST_NAME,'  ',CUSTOMER_LAST_NAME) AS CUSTOMERNAME FROM CUSTOMER ORDER BY CUSTOMER_FIRST_NAME ASC";
    }
    if(searchoptionid==24)
    {
      var autosearchquery="SELECT DISTINCT CPD_EMAIL FROM CUSTOMER_PERSONAL_DETAILS order by CPD_EMAIL ASC";
    }
    if(searchoptionid==25)
    {
      var autosearchquery="SELECT DISTINCT CPD_EP_NO FROM CUSTOMER_PERSONAL_DETAILS order by CPD_EP_NO ASC";
    }
    if(searchoptionid==26)
    {
      var autosearchquery="SELECT DISTINCT CPD_MOBILE FROM CUSTOMER_PERSONAL_DETAILS order by CPD_MOBILE ASC";
    }
    if(searchoptionid==28)
    {
      var autosearchquery="SELECT DISTINCT CCD_OFFICE_NO FROM CUSTOMER_COMPANY_DETAILS order by CCD_OFFICE_NO ASC";
    }
    if(searchoptionid==29)
    {
      var autosearchquery="SELECT DISTINCT CPD_PASSPORT_NO FROM CUSTOMER_PERSONAL_DETAILS order by CPD_PASSPORT_NO ASC";
    }
    if(searchoptionid==32)
    {
      var autosearchquery="SELECT DISTINCT CPD_INTL_MOBILE FROM CUSTOMER_PERSONAL_DETAILS order by CPD_INTL_MOBILE ASC";
    }
    var CSRD_autosearch_result = CSRD_autosearchstmt.executeQuery(autosearchquery);
    while(CSRD_autosearch_result.next())
    {
      if(CSRD_autosearch_result.getString(1)!=null && CSRD_autosearch_result.getString(1)!="")
      {
        CSRD_searchdetails_array.push(CSRD_autosearch_result.getString(1));
      }
    }
    CSRD_autosearch_result.close();
    CSRD_autosearchstmt.close();
    var autosearchreturnarray=[CSRD_searchdetails_array,searchoptionid];
    return autosearchreturnarray;
    CSRD_conn.close();
  }
  
  function CSRC_customersearch_commonvalues()
  {
    var CSRD_conn = eilib.db_GetConnection();
    ///////////////////CUSTOMER TABLE ERROR MESSGAE////////////////////////////
    var CSRD_customerinitialerrorstmt = CSRD_conn.createStatement();
    var CSRD_customerinitialerror_query = "SELECT CED_ID FROM CUSTOMER_ENTRY_DETAILS"; 
    var CSRD_customerinitialerror_result = CSRD_customerinitialerrorstmt.executeQuery(CSRD_customerinitialerror_query);
    if(CSRD_customerinitialerror_result.next())
    {
      var CSRD_initialerror_array=1;
    }
    CSRD_customerinitialerror_result.close();
    CSRD_customerinitialerrorstmt.close();
    ///////////////////ERROR MESSAGE////////////////////////////
    var CSRD_error_code ='1,2,33,34,35,36,37,104,315,339,342,343,344,345,346,347,348,385,440,441,442,443,444,458,459,460,461';
    var CSRD_error_array=eilib.GetErrorMessageList(CSRD_conn, CSRD_error_code)
    //////////////////////NATIONALITY/////////////////
    var CSRD_nation_array =eilib.CUST_getNationality(CSRD_conn);
    //////////////////ROOM TYPE /////////////
    var CSRD_roomtypestmt = CSRD_conn.createStatement();
    var CSRD_roomtype_array =[];
    var CSRD_roomtype_query = "SELECT URTD_ROOM_TYPE,URTD_ID FROM UNIT_ROOM_TYPE_DETAILS ORDER BY URTD_ROOM_TYPE ASC"; 
    var CSRD_roomtype_result = CSRD_roomtypestmt.executeQuery(CSRD_roomtype_query);
    while(CSRD_roomtype_result.next())
    {
      var CSRD_roomtype_value=CSRD_roomtype_result.getString("URTD_ROOM_TYPE");
      var CSRD_roomtype_id=CSRD_roomtype_result.getString("URTD_ID");
      CSRD_roomtype_array.push({roomtypeid:CSRD_roomtype_id,roomtypedata:CSRD_roomtype_value});
    }
    CSRD_roomtype_result.close();
    CSRD_roomtypestmt.close();
    /******************CCOPTION****************************/
    var CSRD_option_array=eilib.CUST_getOptionValue(CSRD_conn);
    /********************PRORATED**************************/
    var CSRD_prowav_array=eilib.CUST_GetProratelbl(CSRD_conn);
    /********************EMAIL LIST*************************/
    var CSRD_mail_array =eilib.getProfileEmailId(CSRD_conn,"CREATION");
    /*********************UNIT*******************************/
    var CSRD_unit_array =eilib.getAllUunits(CSRD_conn);
    var CSRD_active_unitarray=eilib.GetActiveUnit(CSRD_conn);
    /******************************TIME**************************/
    var CSRD_timearray=eilib.CUST_getCalendarTime(CSRD_conn);
    var CSRD_CustomerSD=eilib.getCustomerStartdate(CSRD_conn);
    /******************************SEARCH OPTION*********************/
    var CSRC_select_query_custoptions= "SELECT DISTINCT CCN_ID,CCN_DATA FROM CUSTOMER_CONFIGURATION WHERE CCN_ID BETWEEN 18 AND 34 ORDER BY CCN_DATA ASC";
    var CSRC_stmt_custoption = CSRD_conn.createStatement();
    var CSRC_custoption_rs = CSRC_stmt_custoption.executeQuery(CSRC_select_query_custoptions);
    var CSRC_LB_custoption=[];
    while(CSRC_custoption_rs.next())
    {
      var CSRC_all_custoptions = CSRC_custoption_rs.getString(2);
      var CSRC_all_custoptionsid = CSRC_custoption_rs.getString(1);
      CSRC_LB_custoption.push({searchoption:CSRC_all_custoptions,searchoptionid:CSRC_all_custoptionsid});
    }
    CSRC_custoption_rs.close();
    CSRC_stmt_custoption.close();
    var proratedwaived=eilib.CUST_getProratedWaivedValue(CSRD_conn);
    var CSRD_RESULTS={initialtableerror:CSRD_initialerror_array,roomtype:CSRD_roomtype_array,searchoption:CSRC_LB_custoption,proratedlabel:proratedwaived,unit:CSRD_unit_array,time:CSRD_timearray,email:CSRD_mail_array,prorated:CSRD_prowav_array,ccoption:CSRD_option_array,nation:CSRD_nation_array,error:CSRD_error_array.errormsg,CustomerSD:CSRD_CustomerSD,activeunit:CSRD_active_unitarray}
    return CSRD_RESULTS;
    CSRD_conn.close();
  }
  function CSRC_searchdetails(CSRC_searchoption,CSRC_customerid1,CSRC_customerid2)
  {
    var CSRC_conn = eilib.db_GetConnection();
    if(CSRC_searchoption==18)
    {
      var table_header=CSRC_customerid1;
      var temptablequery="CALL SP_CUSTOMER_SEARCH_TEMP_TABLE('"+CSRC_customerid1+"',"+null+","+CSRC_searchoption+",'"+UserStamp+"',@TABLENAME)";
      var CSRC_customerflextable_query="SELECT DISTINCT CTD.CLP_TERMINATE,CED.CED_PRORATED,CED.CED_PRETERMINATE,U.UNIT_NO,C.CUSTOMER_ID,C.CUSTOMER_FIRST_NAME,C.CUSTOMER_LAST_NAME,CCD.CCD_COMPANY_NAME,CCD.CCD_COMPANY_ADDR,CCD.CCD_POSTAL_CODE,CCD.CCD_OFFICE_NO,CED.UASD_ID,CED.CED_REC_VER,CED.CED_SD_STIME,CED.CED_SD_ETIME,CED.CED_ED_STIME,CED.CED_ED_ETIME,CED.CED_LEASE_PERIOD,CED.CED_QUARTERS,CED.CED_RECHECKIN,CED.CED_EXTENSION,CED.CED_PROCESSING_WAIVED,CED.CED_PRETERMINATE,CED.CED_NOTICE_PERIOD,CED.CED_NOTICE_START_DATE,CED.CED_CANCEL_DATE,CF.CC_DEPOSIT,CF.CC_PAYMENT_AMOUNT,CF.CC_DEPOSIT,CF.CC_ELECTRICITY_CAP,CF.CC_AIRCON_FIXED_FEE,CF.CC_AIRCON_QUARTERLY_FEE,CF.CC_DRYCLEAN_FEE,CF.CC_PROCESSING_FEE,CF.CC_CHECKOUT_CLEANING_FEE,CTD.CLP_STARTDATE,CTD.CLP_ENDDATE,CTD.CLP_TERMINATE,CTD.CLP_PRETERMINATE_DATE,CTD.CLP_GUEST_CARD,UASD.UASD_ACCESS_CARD,NC.NC_DATA,CPD.CPD_MOBILE,CPD.CPD_INTL_MOBILE,CPD.CPD_EMAIL,CPD.CPD_PASSPORT_NO,CPD.CPD_PASSPORT_DATE,CPD.CPD_EP_NO,CPD.CPD_EP_DATE,CPD.CPD_DOB,CPD.CPD_COMMENTS,ULD.ULD_LOGINID,DATE_FORMAT(CONVERT_TZ(CTD.CLP_TIMESTAMP,"+timeZoneFormat+"),'%d-%m-%Y %T') AS CTD_TIME_STAMP FROM  CUSTOMER_ENTRY_DETAILS CED LEFT JOIN CUSTOMER_COMPANY_DETAILS CCD on CED.CUSTOMER_ID=CCD.CUSTOMER_ID left join CUSTOMER_LP_DETAILS CTD on CED.CUSTOMER_ID=CTD.CUSTOMER_ID left join CUSTOMER_ACCESS_CARD_DETAILS CACD on CED.CUSTOMER_ID=CACD.CUSTOMER_ID and (CTD.UASD_ID=CACD.UASD_ID)left join UNIT_ACCESS_STAMP_DETAILS UASD on  (UASD.UASD_ID=CACD.UASD_ID) left join TEMP_CUSTOMER_SEARCH_FEE_DETAIL CF on  CED.CUSTOMER_ID=CF.CUSTOMER_ID left join CUSTOMER C on CED.CUSTOMER_ID=C.CUSTOMER_ID left join  CUSTOMER_PERSONAL_DETAILS CPD on CED.CUSTOMER_ID=CPD.CUSTOMER_ID ,NATIONALITY_CONFIGURATION NC ,UNIT U,USER_LOGIN_DETAILS ULD  where (CED.UNIT_ID=U.UNIT_ID) and(CPD.NC_ID=NC.NC_ID) and  (CED.CED_REC_VER=CF.CUSTOMER_REC_VER) AND CED.CED_REC_VER=CTD.CED_REC_VER AND (CACD.ACN_ID=4 OR CACD.ACN_ID IS NULL) AND ULD.ULD_ID=CTD.ULD_ID order by C.CUSTOMER_ID,CED.CED_REC_VER,CACD.CACD_GUEST_CARD";
    }
    if(CSRC_searchoption==19)
    {
      table_header=CSRC_customerid1;
      var temptablequery="CALL SP_CUSTOMER_SEARCH_TEMP_TABLE('"+CSRC_customerid1+"',"+null+","+CSRC_searchoption+",'"+UserStamp+"',@TABLENAME)";
      var CSRC_customerflextable_query="SELECT DISTINCT CTD.CLP_TERMINATE,CED.CED_PRORATED,CED.CED_PRETERMINATE,U.UNIT_NO,C.CUSTOMER_ID,C.CUSTOMER_FIRST_NAME,C.CUSTOMER_LAST_NAME,CCD.CCD_COMPANY_NAME,CCD.CCD_COMPANY_ADDR,CCD.CCD_POSTAL_CODE,CCD.CCD_OFFICE_NO,CED.UASD_ID,CED.CED_REC_VER,CED.CED_SD_STIME,CED.CED_SD_ETIME,CED.CED_ED_STIME,CED.CED_ED_ETIME,CED.CED_LEASE_PERIOD,CED.CED_QUARTERS,CED.CED_RECHECKIN,CED.CED_EXTENSION,CED.CED_PROCESSING_WAIVED,CED.CED_PRETERMINATE,CED.CED_NOTICE_PERIOD,CED.CED_NOTICE_START_DATE,CED.CED_CANCEL_DATE,CF.CC_DEPOSIT,CF.CC_PAYMENT_AMOUNT,CF.CC_DEPOSIT,CF.CC_ELECTRICITY_CAP,CF.CC_AIRCON_FIXED_FEE,CF.CC_AIRCON_QUARTERLY_FEE,CF.CC_DRYCLEAN_FEE,CF.CC_PROCESSING_FEE,CF.CC_CHECKOUT_CLEANING_FEE,CTD.CLP_STARTDATE,CTD.CLP_ENDDATE,CTD.CLP_TERMINATE,CTD.CLP_PRETERMINATE_DATE,CTD.CLP_GUEST_CARD,UASD.UASD_ACCESS_CARD,NC.NC_DATA,CPD.CPD_MOBILE,CPD.CPD_INTL_MOBILE,CPD.CPD_EMAIL,CPD.CPD_PASSPORT_NO,CPD.CPD_PASSPORT_DATE,CPD.CPD_EP_NO,CPD.CPD_EP_DATE,CPD.CPD_DOB,CPD.CPD_COMMENTS,ULD.ULD_LOGINID,DATE_FORMAT(CONVERT_TZ(CTD.CLP_TIMESTAMP,"+timeZoneFormat+"),'%d-%m-%Y %T') AS CTD_TIME_STAMP FROM  CUSTOMER_ENTRY_DETAILS CED LEFT JOIN CUSTOMER_COMPANY_DETAILS CCD on CED.CUSTOMER_ID=CCD.CUSTOMER_ID left join CUSTOMER_LP_DETAILS CTD on CED.CUSTOMER_ID=CTD.CUSTOMER_ID left join CUSTOMER_ACCESS_CARD_DETAILS CACD on CED.CUSTOMER_ID=CACD.CUSTOMER_ID and (CTD.UASD_ID=CACD.UASD_ID)left join UNIT_ACCESS_STAMP_DETAILS UASD on  (UASD.UASD_ID=CACD.UASD_ID) left join TEMP_CUSTOMER_SEARCH_FEE_DETAIL CF on  CED.CUSTOMER_ID=CF.CUSTOMER_ID left join CUSTOMER C on CED.CUSTOMER_ID=C.CUSTOMER_ID left join  CUSTOMER_PERSONAL_DETAILS CPD on CED.CUSTOMER_ID=CPD.CUSTOMER_ID ,NATIONALITY_CONFIGURATION NC ,UNIT U,USER_LOGIN_DETAILS ULD where CCD.CCD_COMPANY_NAME='"+CSRC_customerid1+"' AND (CED.UNIT_ID=U.UNIT_ID) and(CPD.NC_ID=NC.NC_ID) and  (CED.CED_REC_VER=CF.CUSTOMER_REC_VER) AND CED.CED_REC_VER=CTD.CED_REC_VER AND ULD.ULD_ID=CTD.ULD_ID order by C.CUSTOMER_ID,U.UNIT_NO,CED.CED_REC_VER";
    }
    if(CSRC_searchoption==20)
    {
      table_header=CSRC_customerid1;
      CSRC_customerid1=eilib.ConvertSpclCharString(CSRC_customerid1)
      temptablequery="CALL SP_CUSTOMER_SEARCH_TEMP_TABLE('"+CSRC_customerid1+"',"+null+","+CSRC_searchoption+",'"+UserStamp+"',@TABLENAME)";
      var CSRC_customerflextable_query="SELECT CTD.CLP_TERMINATE,CED.CED_PRORATED,CED.CED_PRETERMINATE,U.UNIT_NO,C.CUSTOMER_ID,C.CUSTOMER_FIRST_NAME,C.CUSTOMER_LAST_NAME,CCD.CCD_COMPANY_NAME,CCD.CCD_COMPANY_ADDR,CCD.CCD_POSTAL_CODE,CCD.CCD_OFFICE_NO,CED.UASD_ID,CED.CED_REC_VER,CED.CED_SD_STIME,CED.CED_SD_ETIME,CED.CED_ED_STIME,CED.CED_ED_ETIME,CED.CED_LEASE_PERIOD,CED.CED_QUARTERS,CED.CED_RECHECKIN,CED.CED_EXTENSION,CED.CED_PROCESSING_WAIVED,CED.CED_PRETERMINATE,CED.CED_NOTICE_PERIOD,CED.CED_NOTICE_START_DATE,CED.CED_CANCEL_DATE,CF.CC_DEPOSIT,CF.CC_PAYMENT_AMOUNT,CF.CC_DEPOSIT,CF.CC_ELECTRICITY_CAP,CF.CC_AIRCON_FIXED_FEE,CF.CC_AIRCON_QUARTERLY_FEE,CF.CC_DRYCLEAN_FEE,CF.CC_PROCESSING_FEE,CF.CC_CHECKOUT_CLEANING_FEE,CTD.CLP_STARTDATE,CTD.CLP_ENDDATE,CTD.CLP_TERMINATE,CTD.CLP_PRETERMINATE_DATE,CTD.CLP_GUEST_CARD,UASD.UASD_ACCESS_CARD,NC.NC_DATA,CPD.CPD_MOBILE,CPD.CPD_INTL_MOBILE,CPD.CPD_EMAIL,CPD.CPD_PASSPORT_NO,CPD.CPD_PASSPORT_DATE,CPD.CPD_EP_NO,CPD.CPD_EP_DATE,CPD.CPD_DOB,CPD.CPD_COMMENTS,ULD.ULD_LOGINID,DATE_FORMAT(CONVERT_TZ(CTD.CLP_TIMESTAMP,"+timeZoneFormat+"),'%d-%m-%Y %T') AS CTD_TIME_STAMP FROM  CUSTOMER_ENTRY_DETAILS CED LEFT JOIN CUSTOMER_COMPANY_DETAILS CCD on CED.CUSTOMER_ID=CCD.CUSTOMER_ID left join CUSTOMER_LP_DETAILS CTD on CED.CUSTOMER_ID=CTD.CUSTOMER_ID left join CUSTOMER_ACCESS_CARD_DETAILS CACD on CED.CUSTOMER_ID=CACD.CUSTOMER_ID and (CTD.UASD_ID=CACD.UASD_ID)left join UNIT_ACCESS_STAMP_DETAILS UASD on  (UASD.UASD_ID=CACD.UASD_ID) left join TEMP_CUSTOMER_SEARCH_FEE_DETAIL CF on  CED.CUSTOMER_ID=CF.CUSTOMER_ID left join CUSTOMER C on CED.CUSTOMER_ID=C.CUSTOMER_ID left join  CUSTOMER_PERSONAL_DETAILS CPD on CED.CUSTOMER_ID=CPD.CUSTOMER_ID ,NATIONALITY_CONFIGURATION NC ,UNIT U,USER_LOGIN_DETAILS ULD  where CPD.CPD_COMMENTS='"+CSRC_customerid1+"' AND (CED.UNIT_ID=U.UNIT_ID) and(CPD.NC_ID=NC.NC_ID) and  (CED.CED_REC_VER=CF.CUSTOMER_REC_VER) AND CED.CED_REC_VER=CTD.CED_REC_VER  AND ULD.ULD_ID=CTD.ULD_ID order by C.CUSTOMER_ID,CED.CED_REC_VER,CACD.CACD_GUEST_CARD";
    }
    if(CSRC_searchoption==21)
    {
      var customernamesplit=CSRC_customerid1.split('  ');
      var customername=customernamesplit[0]+'_'+customernamesplit[1];
      var temptablequery="CALL SP_CUSTOMER_SEARCH_TEMP_TABLE('"+customername+"',"+null+","+CSRC_searchoption+",'"+UserStamp+"',@TABLENAME)";
      var CSRC_customerflextable_query = "SELECT DISTINCT CTD.CLP_TERMINATE,CED.CED_PRORATED,CED.CED_PRETERMINATE,U.UNIT_NO,C.CUSTOMER_ID,C.CUSTOMER_FIRST_NAME,C.CUSTOMER_LAST_NAME,CCD.CCD_COMPANY_NAME,CCD.CCD_COMPANY_ADDR,CCD.CCD_POSTAL_CODE,CCD.CCD_OFFICE_NO,CED.UASD_ID,CED.CED_REC_VER,CED.CED_SD_STIME,CED.CED_SD_ETIME,CED.CED_ED_STIME,CED.CED_ED_ETIME,CED.CED_LEASE_PERIOD,CED.CED_QUARTERS,CED.CED_RECHECKIN,CED.CED_EXTENSION,CED.CED_PROCESSING_WAIVED,CED.CED_PRETERMINATE,CED.CED_NOTICE_PERIOD,CED.CED_NOTICE_START_DATE,CED.CED_CANCEL_DATE,CF.CC_DEPOSIT,CF.CC_PAYMENT_AMOUNT,CF.CC_DEPOSIT,CF.CC_ELECTRICITY_CAP,CF.CC_AIRCON_FIXED_FEE,CF.CC_AIRCON_QUARTERLY_FEE,CF.CC_DRYCLEAN_FEE,CF.CC_PROCESSING_FEE,CF.CC_CHECKOUT_CLEANING_FEE,CTD.CLP_STARTDATE,CTD.CLP_ENDDATE,CTD.CLP_TERMINATE,CTD.CLP_PRETERMINATE_DATE,CTD.CLP_GUEST_CARD,UASD.UASD_ACCESS_CARD,NC.NC_DATA,CPD.CPD_MOBILE,CPD.CPD_INTL_MOBILE,CPD.CPD_EMAIL,CPD.CPD_PASSPORT_NO,CPD.CPD_PASSPORT_DATE,CPD.CPD_EP_NO,CPD.CPD_EP_DATE,CPD.CPD_DOB,CPD.CPD_COMMENTS,ULD.ULD_LOGINID,DATE_FORMAT(CONVERT_TZ(CTD.CLP_TIMESTAMP,"+timeZoneFormat+"),'%d-%m-%Y %T') AS CTD_TIME_STAMP FROM  CUSTOMER_ENTRY_DETAILS CED LEFT JOIN CUSTOMER_COMPANY_DETAILS CCD on CED.CUSTOMER_ID=CCD.CUSTOMER_ID left join CUSTOMER_LP_DETAILS CTD on CED.CUSTOMER_ID=CTD.CUSTOMER_ID left join CUSTOMER_ACCESS_CARD_DETAILS CACD on CED.CUSTOMER_ID=CACD.CUSTOMER_ID and (CTD.UASD_ID=CACD.UASD_ID)left join UNIT_ACCESS_STAMP_DETAILS UASD on  (UASD.UASD_ID=CACD.UASD_ID) left join TEMP_CUSTOMER_SEARCH_FEE_DETAIL CF on  CED.CUSTOMER_ID=CF.CUSTOMER_ID left join CUSTOMER C on CED.CUSTOMER_ID=C.CUSTOMER_ID left join  CUSTOMER_PERSONAL_DETAILS CPD on CED.CUSTOMER_ID=CPD.CUSTOMER_ID ,NATIONALITY_CONFIGURATION NC ,UNIT U,USER_LOGIN_DETAILS ULD  where  (CED.UNIT_ID=U.UNIT_ID) and(CPD.NC_ID=NC.NC_ID) and  (CED.CED_REC_VER=CF.CUSTOMER_REC_VER) AND CED.CED_REC_VER=CTD.CED_REC_VER AND ULD.ULD_ID=CTD.ULD_ID AND ULD.ULD_ID=CTD.ULD_ID order by C.CUSTOMER_ID,CED.CED_REC_VER,CACD.CACD_GUEST_CARD";
    }
    if(CSRC_searchoption==22)
    {
      var temptablequery="CALL SP_CUSTOMER_SEARCH_TEMP_TABLE('"+CSRC_customerid1+"','"+CSRC_customerid2+"',"+CSRC_searchoption+",'"+UserStamp+"',@TABLENAME)";
      var CSRC_customerflextable_query = "SELECT  CTD.CLP_TERMINATE,CED.CED_PRORATED,CED.CED_PRETERMINATE,U.UNIT_NO,C.CUSTOMER_ID,C.CUSTOMER_FIRST_NAME,C.CUSTOMER_LAST_NAME,CCD.CCD_COMPANY_NAME,CCD.CCD_COMPANY_ADDR,CCD.CCD_POSTAL_CODE,CCD.CCD_OFFICE_NO,CED.UASD_ID,CED.CED_REC_VER,CED.CED_SD_STIME,CED.CED_SD_ETIME,CED.CED_ED_STIME,CED.CED_ED_ETIME,CED.CED_LEASE_PERIOD,CED.CED_QUARTERS,CED.CED_RECHECKIN,CED.CED_EXTENSION,CED.CED_PROCESSING_WAIVED,CED.CED_PRETERMINATE,CED.CED_NOTICE_PERIOD,CED.CED_NOTICE_START_DATE,CED.CED_CANCEL_DATE,CF.CC_DEPOSIT,CF.CC_PAYMENT_AMOUNT,CF.CC_DEPOSIT,CF.CC_ELECTRICITY_CAP,CF.CC_AIRCON_FIXED_FEE,CF.CC_AIRCON_QUARTERLY_FEE,CF.CC_DRYCLEAN_FEE,CF.CC_PROCESSING_FEE,CF.CC_CHECKOUT_CLEANING_FEE,CTD.CLP_STARTDATE,CTD.CLP_ENDDATE,CTD.CLP_TERMINATE,CTD.CLP_PRETERMINATE_DATE,CTD.CLP_GUEST_CARD,UASD.UASD_ACCESS_CARD,NC.NC_DATA,CPD.CPD_MOBILE,CPD.CPD_INTL_MOBILE,CPD.CPD_EMAIL,CPD.CPD_PASSPORT_NO,CPD.CPD_PASSPORT_DATE,CPD.CPD_EP_NO,CPD.CPD_EP_DATE,CPD.CPD_DOB,CPD.CPD_COMMENTS,ULD.ULD_LOGINID,DATE_FORMAT(CONVERT_TZ(CTD.CLP_TIMESTAMP,"+timeZoneFormat+"),'%d-%m-%Y %T') AS CTD_TIME_STAMP FROM  CUSTOMER_ENTRY_DETAILS CED LEFT JOIN CUSTOMER_COMPANY_DETAILS CCD on CED.CUSTOMER_ID=CCD.CUSTOMER_ID left join CUSTOMER_LP_DETAILS CTD on CED.CUSTOMER_ID=CTD.CUSTOMER_ID left join CUSTOMER_ACCESS_CARD_DETAILS CACD on CED.CUSTOMER_ID=CACD.CUSTOMER_ID and (CTD.UASD_ID=CACD.UASD_ID)left join UNIT_ACCESS_STAMP_DETAILS UASD on  (UASD.UASD_ID=CACD.UASD_ID) left join TEMP_CUSTOMER_SEARCH_FEE_DETAIL CF on  CED.CUSTOMER_ID=CF.CUSTOMER_ID left join CUSTOMER C on CED.CUSTOMER_ID=C.CUSTOMER_ID left join  CUSTOMER_PERSONAL_DETAILS CPD on CED.CUSTOMER_ID=CPD.CUSTOMER_ID ,NATIONALITY_CONFIGURATION NC ,UNIT U,USER_LOGIN_DETAILS ULD  where   (CED.UNIT_ID=U.UNIT_ID)AND CF.CC_PAYMENT_AMOUNT BETWEEN '"+CSRC_customerid1+"' AND'"+CSRC_customerid2+"' and(CPD.NC_ID=NC.NC_ID) and  (CED.CED_REC_VER=CF.CUSTOMER_REC_VER) AND CED.CED_REC_VER=CTD.CED_REC_VER  AND ULD.ULD_ID=CTD.ULD_ID order by C.CUSTOMER_ID,CED.CED_REC_VER,CACD.CACD_GUEST_CARD";
    }
    if(CSRC_searchoption==23)
    {
      var table_header=CSRC_customerid1;
      var startdate=eilib.SqlDateFormat(CSRC_customerid1);
      var enddate=eilib.SqlDateFormat(CSRC_customerid2);
      var temptablequery="CALL SP_CUSTOMER_SEARCH_TEMP_TABLE('"+startdate+"','"+enddate+"',"+CSRC_searchoption+",'"+UserStamp+"',@TABLENAME)";
      var CSRC_customerflextable_query="SELECT DISTINCT CTD.CLP_TERMINATE,CED.CED_PRORATED,CED.CED_PRETERMINATE,U.UNIT_NO,C.CUSTOMER_ID,C.CUSTOMER_FIRST_NAME,C.CUSTOMER_LAST_NAME,CCD.CCD_COMPANY_NAME,CCD.CCD_COMPANY_ADDR,CCD.CCD_POSTAL_CODE,CCD.CCD_OFFICE_NO,CED.UASD_ID,CED.CED_REC_VER,CED.CED_SD_STIME,CED.CED_SD_ETIME,CED.CED_ED_STIME,CED.CED_ED_ETIME,CED.CED_LEASE_PERIOD,CED.CED_QUARTERS,CED.CED_RECHECKIN,CED.CED_EXTENSION,CED.CED_PROCESSING_WAIVED,CED.CED_PRETERMINATE,CED.CED_NOTICE_PERIOD,CED.CED_NOTICE_START_DATE,CED.CED_CANCEL_DATE,CF.CC_DEPOSIT,CF.CC_PAYMENT_AMOUNT,CF.CC_DEPOSIT,CF.CC_ELECTRICITY_CAP,CF.CC_AIRCON_FIXED_FEE,CF.CC_AIRCON_QUARTERLY_FEE,CF.CC_DRYCLEAN_FEE,CF.CC_PROCESSING_FEE,CF.CC_CHECKOUT_CLEANING_FEE,CTD.CLP_STARTDATE,CTD.CLP_ENDDATE,CTD.CLP_TERMINATE,CTD.CLP_PRETERMINATE_DATE,CTD.CLP_GUEST_CARD,UASD.UASD_ACCESS_CARD,NC.NC_DATA,CPD.CPD_MOBILE,CPD.CPD_INTL_MOBILE,CPD.CPD_EMAIL,CPD.CPD_PASSPORT_NO,CPD.CPD_PASSPORT_DATE,CPD.CPD_EP_NO,CPD.CPD_EP_DATE,CPD.CPD_DOB,CPD.CPD_COMMENTS,ULD.ULD_LOGINID,DATE_FORMAT(CONVERT_TZ(CTD.CLP_TIMESTAMP,"+timeZoneFormat+"),'%d-%m-%Y %T') AS CTD_TIME_STAMP FROM  CUSTOMER_ENTRY_DETAILS CED LEFT JOIN CUSTOMER_COMPANY_DETAILS CCD on CED.CUSTOMER_ID=CCD.CUSTOMER_ID left join CUSTOMER_LP_DETAILS CTD on CED.CUSTOMER_ID=CTD.CUSTOMER_ID left join CUSTOMER_ACCESS_CARD_DETAILS CACD on CED.CUSTOMER_ID=CACD.CUSTOMER_ID and (CTD.UASD_ID=CACD.UASD_ID)left join UNIT_ACCESS_STAMP_DETAILS UASD on  (UASD.UASD_ID=CACD.UASD_ID) left join TEMP_CUSTOMER_SEARCH_FEE_DETAIL CF on  CED.CUSTOMER_ID=CF.CUSTOMER_ID left join CUSTOMER C on CED.CUSTOMER_ID=C.CUSTOMER_ID left join  CUSTOMER_PERSONAL_DETAILS CPD on CED.CUSTOMER_ID=CPD.CUSTOMER_ID ,NATIONALITY_CONFIGURATION NC ,UNIT U,USER_LOGIN_DETAILS ULD  where   (CED.UNIT_ID=U.UNIT_ID)AND CPD.CPD_DOB BETWEEN '"+startdate+"' AND '"+enddate+"' and(CPD.NC_ID=NC.NC_ID) and  (CED.CED_REC_VER=CF.CUSTOMER_REC_VER) AND CED.CED_REC_VER=CTD.CED_REC_VER AND ULD.ULD_ID=CTD.ULD_ID order by C.CUSTOMER_ID,CED.CED_REC_VER,CACD.CACD_GUEST_CARD";
    }
    if(CSRC_searchoption==24)
    {
      table_header=CSRC_customerid1;
      var temptablequery="CALL SP_CUSTOMER_SEARCH_TEMP_TABLE('"+CSRC_customerid1+"',"+null+","+CSRC_searchoption+",'"+UserStamp+"',@TABLENAME)";
      var CSRC_customerflextable_query="SELECT DISTINCT CTD.CLP_TERMINATE,CED.CED_PRORATED,CED.CED_PRETERMINATE,U.UNIT_NO,C.CUSTOMER_ID,C.CUSTOMER_FIRST_NAME,C.CUSTOMER_LAST_NAME,CCD.CCD_COMPANY_NAME,CCD.CCD_COMPANY_ADDR,CCD.CCD_POSTAL_CODE,CCD.CCD_OFFICE_NO,CED.UASD_ID,CED.CED_REC_VER,CED.CED_SD_STIME,CED.CED_SD_ETIME,CED.CED_ED_STIME,CED.CED_ED_ETIME,CED.CED_LEASE_PERIOD,CED.CED_QUARTERS,CED.CED_RECHECKIN,CED.CED_EXTENSION,CED.CED_PROCESSING_WAIVED,CED.CED_PRETERMINATE,CED.CED_NOTICE_PERIOD,CED.CED_NOTICE_START_DATE,CED.CED_CANCEL_DATE,CF.CC_DEPOSIT,CF.CC_PAYMENT_AMOUNT,CF.CC_DEPOSIT,CF.CC_ELECTRICITY_CAP,CF.CC_AIRCON_FIXED_FEE,CF.CC_AIRCON_QUARTERLY_FEE,CF.CC_DRYCLEAN_FEE,CF.CC_PROCESSING_FEE,CF.CC_CHECKOUT_CLEANING_FEE,CTD.CLP_STARTDATE,CTD.CLP_ENDDATE,CTD.CLP_TERMINATE,CTD.CLP_PRETERMINATE_DATE,CTD.CLP_GUEST_CARD,UASD.UASD_ACCESS_CARD,NC.NC_DATA,CPD.CPD_MOBILE,CPD.CPD_INTL_MOBILE,CPD.CPD_EMAIL,CPD.CPD_PASSPORT_NO,CPD.CPD_PASSPORT_DATE,CPD.CPD_EP_NO,CPD.CPD_EP_DATE,CPD.CPD_DOB,CPD.CPD_COMMENTS,ULD.ULD_LOGINID,DATE_FORMAT(CONVERT_TZ(CTD.CLP_TIMESTAMP,"+timeZoneFormat+"),'%d-%m-%Y %T') AS CTD_TIME_STAMP FROM  CUSTOMER_ENTRY_DETAILS CED LEFT JOIN CUSTOMER_COMPANY_DETAILS CCD on CED.CUSTOMER_ID=CCD.CUSTOMER_ID left join CUSTOMER_LP_DETAILS CTD on CED.CUSTOMER_ID=CTD.CUSTOMER_ID left join CUSTOMER_ACCESS_CARD_DETAILS CACD on CED.CUSTOMER_ID=CACD.CUSTOMER_ID and (CTD.UASD_ID=CACD.UASD_ID)left join UNIT_ACCESS_STAMP_DETAILS UASD on  (UASD.UASD_ID=CACD.UASD_ID) left join TEMP_CUSTOMER_SEARCH_FEE_DETAIL CF on  CED.CUSTOMER_ID=CF.CUSTOMER_ID left join CUSTOMER C on CED.CUSTOMER_ID=C.CUSTOMER_ID left join  CUSTOMER_PERSONAL_DETAILS CPD on CED.CUSTOMER_ID=CPD.CUSTOMER_ID ,NATIONALITY_CONFIGURATION NC ,UNIT U,USER_LOGIN_DETAILS ULD  where CPD.CPD_EMAIL='"+CSRC_customerid1+"' AND (CED.UNIT_ID=U.UNIT_ID) and(CPD.NC_ID=NC.NC_ID) and  (CED.CED_REC_VER=CF.CUSTOMER_REC_VER) AND CED.CED_REC_VER=CTD.CED_REC_VER  AND ULD.ULD_ID=CTD.ULD_ID order by C.CUSTOMER_ID,CED.CED_REC_VER,CACD.CACD_GUEST_CARD";
    }
    if(CSRC_searchoption==25)
    {
      table_header=CSRC_customerid1;
      var temptablequery="CALL SP_CUSTOMER_SEARCH_TEMP_TABLE('"+CSRC_customerid1+"',"+null+","+CSRC_searchoption+",'"+UserStamp+"',@TABLENAME)";
      var CSRC_customerflextable_query="SELECT DISTINCT CTD.CLP_TERMINATE,CED.CED_PRORATED,CED.CED_PRETERMINATE,U.UNIT_NO,C.CUSTOMER_ID,C.CUSTOMER_FIRST_NAME,C.CUSTOMER_LAST_NAME,CCD.CCD_COMPANY_NAME,CCD.CCD_COMPANY_ADDR,CCD.CCD_POSTAL_CODE,CCD.CCD_OFFICE_NO,CED.UASD_ID,CED.CED_REC_VER,CED.CED_SD_STIME,CED.CED_SD_ETIME,CED.CED_ED_STIME,CED.CED_ED_ETIME,CED.CED_LEASE_PERIOD,CED.CED_QUARTERS,CED.CED_RECHECKIN,CED.CED_EXTENSION,CED.CED_PROCESSING_WAIVED,CED.CED_PRETERMINATE,CED.CED_NOTICE_PERIOD,CED.CED_NOTICE_START_DATE,CED.CED_CANCEL_DATE,CF.CC_DEPOSIT,CF.CC_PAYMENT_AMOUNT,CF.CC_DEPOSIT,CF.CC_ELECTRICITY_CAP,CF.CC_AIRCON_FIXED_FEE,CF.CC_AIRCON_QUARTERLY_FEE,CF.CC_DRYCLEAN_FEE,CF.CC_PROCESSING_FEE,CF.CC_CHECKOUT_CLEANING_FEE,CTD.CLP_STARTDATE,CTD.CLP_ENDDATE,CTD.CLP_TERMINATE,CTD.CLP_PRETERMINATE_DATE,CTD.CLP_GUEST_CARD,UASD.UASD_ACCESS_CARD,NC.NC_DATA,CPD.CPD_MOBILE,CPD.CPD_INTL_MOBILE,CPD.CPD_EMAIL,CPD.CPD_PASSPORT_NO,CPD.CPD_PASSPORT_DATE,CPD.CPD_EP_NO,CPD.CPD_EP_DATE,CPD.CPD_DOB,CPD.CPD_COMMENTS,ULD.ULD_LOGINID,DATE_FORMAT(CONVERT_TZ(CTD.CLP_TIMESTAMP,"+timeZoneFormat+"),'%d-%m-%Y %T') AS CTD_TIME_STAMP FROM  CUSTOMER_ENTRY_DETAILS CED LEFT JOIN CUSTOMER_COMPANY_DETAILS CCD on CED.CUSTOMER_ID=CCD.CUSTOMER_ID left join CUSTOMER_LP_DETAILS CTD on CED.CUSTOMER_ID=CTD.CUSTOMER_ID left join CUSTOMER_ACCESS_CARD_DETAILS CACD on CED.CUSTOMER_ID=CACD.CUSTOMER_ID and (CTD.UASD_ID=CACD.UASD_ID)left join UNIT_ACCESS_STAMP_DETAILS UASD on  (UASD.UASD_ID=CACD.UASD_ID) left join TEMP_CUSTOMER_SEARCH_FEE_DETAIL CF on  CED.CUSTOMER_ID=CF.CUSTOMER_ID left join CUSTOMER C on CED.CUSTOMER_ID=C.CUSTOMER_ID left join  CUSTOMER_PERSONAL_DETAILS CPD on CED.CUSTOMER_ID=CPD.CUSTOMER_ID ,NATIONALITY_CONFIGURATION NC ,UNIT U,USER_LOGIN_DETAILS ULD  where CPD.CPD_EP_NO='"+CSRC_customerid1+"' AND (CED.UNIT_ID=U.UNIT_ID) and(CPD.NC_ID=NC.NC_ID) and  (CED.CED_REC_VER=CF.CUSTOMER_REC_VER) AND CED.CED_REC_VER=CTD.CED_REC_VER  AND ULD.ULD_ID=CTD.ULD_ID order by C.CUSTOMER_ID,CED.CED_REC_VER,CACD.CACD_GUEST_CARD";
    }
    if(CSRC_searchoption==26)
    {
      table_header=CSRC_customerid1;
      var temptablequery="CALL SP_CUSTOMER_SEARCH_TEMP_TABLE('"+CSRC_customerid1+"',"+null+","+CSRC_searchoption+",'"+UserStamp+"',@TABLENAME)";
      var CSRC_customerflextable_query="SELECT DISTINCT CTD.CLP_TERMINATE,CED.CED_PRORATED,CED.CED_PRETERMINATE,U.UNIT_NO,C.CUSTOMER_ID,C.CUSTOMER_FIRST_NAME,C.CUSTOMER_LAST_NAME,CCD.CCD_COMPANY_NAME,CCD.CCD_COMPANY_ADDR,CCD.CCD_POSTAL_CODE,CCD.CCD_OFFICE_NO,CED.UASD_ID,CED.CED_REC_VER,CED.CED_SD_STIME,CED.CED_SD_ETIME,CED.CED_ED_STIME,CED.CED_ED_ETIME,CED.CED_LEASE_PERIOD,CED.CED_QUARTERS,CED.CED_RECHECKIN,CED.CED_EXTENSION,CED.CED_PROCESSING_WAIVED,CED.CED_PRETERMINATE,CED.CED_NOTICE_PERIOD,CED.CED_NOTICE_START_DATE,CED.CED_CANCEL_DATE,CF.CC_DEPOSIT,CF.CC_PAYMENT_AMOUNT,CF.CC_DEPOSIT,CF.CC_ELECTRICITY_CAP,CF.CC_AIRCON_FIXED_FEE,CF.CC_AIRCON_QUARTERLY_FEE,CF.CC_DRYCLEAN_FEE,CF.CC_PROCESSING_FEE,CF.CC_CHECKOUT_CLEANING_FEE,CTD.CLP_STARTDATE,CTD.CLP_ENDDATE,CTD.CLP_TERMINATE,CTD.CLP_PRETERMINATE_DATE,CTD.CLP_GUEST_CARD,UASD.UASD_ACCESS_CARD,NC.NC_DATA,CPD.CPD_MOBILE,CPD.CPD_INTL_MOBILE,CPD.CPD_EMAIL,CPD.CPD_PASSPORT_NO,CPD.CPD_PASSPORT_DATE,CPD.CPD_EP_NO,CPD.CPD_EP_DATE,CPD.CPD_DOB,CPD.CPD_COMMENTS,ULD.ULD_LOGINID,DATE_FORMAT(CONVERT_TZ(CTD.CLP_TIMESTAMP,"+timeZoneFormat+"),'%d-%m-%Y %T') AS CTD_TIME_STAMP FROM  CUSTOMER_ENTRY_DETAILS CED LEFT JOIN CUSTOMER_COMPANY_DETAILS CCD on CED.CUSTOMER_ID=CCD.CUSTOMER_ID left join CUSTOMER_LP_DETAILS CTD on CED.CUSTOMER_ID=CTD.CUSTOMER_ID left join CUSTOMER_ACCESS_CARD_DETAILS CACD on CED.CUSTOMER_ID=CACD.CUSTOMER_ID and (CTD.UASD_ID=CACD.UASD_ID)left join UNIT_ACCESS_STAMP_DETAILS UASD on  (UASD.UASD_ID=CACD.UASD_ID) left join TEMP_CUSTOMER_SEARCH_FEE_DETAIL CF on  CED.CUSTOMER_ID=CF.CUSTOMER_ID left join CUSTOMER C on CED.CUSTOMER_ID=C.CUSTOMER_ID left join  CUSTOMER_PERSONAL_DETAILS CPD on CED.CUSTOMER_ID=CPD.CUSTOMER_ID ,NATIONALITY_CONFIGURATION NC ,UNIT U,USER_LOGIN_DETAILS ULD  where CPD.CPD_MOBILE='"+CSRC_customerid1+"' AND (CED.UNIT_ID=U.UNIT_ID) and(CPD.NC_ID=NC.NC_ID) and  (CED.CED_REC_VER=CF.CUSTOMER_REC_VER) AND CED.CED_REC_VER=CTD.CED_REC_VER  AND ULD.ULD_ID=CTD.ULD_ID order by C.CUSTOMER_ID,CED.CED_REC_VER,CACD.CACD_GUEST_CARD";
    }
    if(CSRC_searchoption==27)
    {
      table_header=CSRC_customerid1;
      var temptablequery="CALL SP_CUSTOMER_SEARCH_TEMP_TABLE('"+CSRC_customerid1+"',"+null+","+CSRC_searchoption+",'"+UserStamp+"',@TABLENAME)";
      var CSRC_customerflextable_query="SELECT DISTINCT CTD.CLP_TERMINATE,CED.CED_PRORATED,CED.CED_PRETERMINATE,U.UNIT_NO,C.CUSTOMER_ID,C.CUSTOMER_FIRST_NAME,C.CUSTOMER_LAST_NAME,CCD.CCD_COMPANY_NAME,CCD.CCD_COMPANY_ADDR,CCD.CCD_POSTAL_CODE,CCD.CCD_OFFICE_NO,CED.UASD_ID,CED.CED_REC_VER,CED.CED_SD_STIME,CED.CED_SD_ETIME,CED.CED_ED_STIME,CED.CED_ED_ETIME,CED.CED_LEASE_PERIOD,CED.CED_QUARTERS,CED.CED_RECHECKIN,CED.CED_EXTENSION,CED.CED_PROCESSING_WAIVED,CED.CED_PRETERMINATE,CED.CED_NOTICE_PERIOD,CED.CED_NOTICE_START_DATE,CED.CED_CANCEL_DATE,CF.CC_DEPOSIT,CF.CC_PAYMENT_AMOUNT,CF.CC_DEPOSIT,CF.CC_ELECTRICITY_CAP,CF.CC_AIRCON_FIXED_FEE,CF.CC_AIRCON_QUARTERLY_FEE,CF.CC_DRYCLEAN_FEE,CF.CC_PROCESSING_FEE,CF.CC_CHECKOUT_CLEANING_FEE,CTD.CLP_STARTDATE,CTD.CLP_ENDDATE,CTD.CLP_TERMINATE,CTD.CLP_PRETERMINATE_DATE,CTD.CLP_GUEST_CARD,UASD.UASD_ACCESS_CARD,NC.NC_DATA,CPD.CPD_MOBILE,CPD.CPD_INTL_MOBILE,CPD.CPD_EMAIL,CPD.CPD_PASSPORT_NO,CPD.CPD_PASSPORT_DATE,CPD.CPD_EP_NO,CPD.CPD_EP_DATE,CPD.CPD_DOB,CPD.CPD_COMMENTS,ULD.ULD_LOGINID,DATE_FORMAT(CONVERT_TZ(CTD.CLP_TIMESTAMP,"+timeZoneFormat+"),'%d-%m-%Y %T') AS CTD_TIME_STAMP FROM  CUSTOMER_ENTRY_DETAILS CED LEFT JOIN CUSTOMER_COMPANY_DETAILS CCD on CED.CUSTOMER_ID=CCD.CUSTOMER_ID left join CUSTOMER_LP_DETAILS CTD on CED.CUSTOMER_ID=CTD.CUSTOMER_ID left join CUSTOMER_ACCESS_CARD_DETAILS CACD on CED.CUSTOMER_ID=CACD.CUSTOMER_ID and (CTD.UASD_ID=CACD.UASD_ID)left join UNIT_ACCESS_STAMP_DETAILS UASD on  (UASD.UASD_ID=CACD.UASD_ID) left join TEMP_CUSTOMER_SEARCH_FEE_DETAIL CF on  CED.CUSTOMER_ID=CF.CUSTOMER_ID left join CUSTOMER C on CED.CUSTOMER_ID=C.CUSTOMER_ID left join  CUSTOMER_PERSONAL_DETAILS CPD on CED.CUSTOMER_ID=CPD.CUSTOMER_ID ,NATIONALITY_CONFIGURATION NC ,UNIT U,USER_LOGIN_DETAILS ULD  where NC.NC_ID=(SELECT NC_ID FROM NATIONALITY_CONFIGURATION WHERE NC_DATA='"+CSRC_customerid1+"') AND (CED.UNIT_ID=U.UNIT_ID) and(CPD.NC_ID=NC.NC_ID) and  (CED.CED_REC_VER=CF.CUSTOMER_REC_VER) AND CED.CED_REC_VER=CTD.CED_REC_VER  AND ULD.ULD_ID=CTD.ULD_ID order by C.CUSTOMER_ID,CED.CED_REC_VER,CACD.CACD_GUEST_CARD";
    }
    if(CSRC_searchoption==28)
    {
      table_header=CSRC_customerid1;
      var temptablequery="CALL SP_CUSTOMER_SEARCH_TEMP_TABLE('"+CSRC_customerid1+"',"+null+","+CSRC_searchoption+",'"+UserStamp+"',@TABLENAME)";
      var CSRC_customerflextable_query="SELECT DISTINCT CTD.CLP_TERMINATE,CED.CED_PRORATED,CED.CED_PRETERMINATE,U.UNIT_NO,C.CUSTOMER_ID,C.CUSTOMER_FIRST_NAME,C.CUSTOMER_LAST_NAME,CCD.CCD_COMPANY_NAME,CCD.CCD_COMPANY_ADDR,CCD.CCD_POSTAL_CODE,CCD.CCD_OFFICE_NO,CED.UASD_ID,CED.CED_REC_VER,CED.CED_SD_STIME,CED.CED_SD_ETIME,CED.CED_ED_STIME,CED.CED_ED_ETIME,CED.CED_LEASE_PERIOD,CED.CED_QUARTERS,CED.CED_RECHECKIN,CED.CED_EXTENSION,CED.CED_PROCESSING_WAIVED,CED.CED_PRETERMINATE,CED.CED_NOTICE_PERIOD,CED.CED_NOTICE_START_DATE,CED.CED_CANCEL_DATE,CF.CC_DEPOSIT,CF.CC_PAYMENT_AMOUNT,CF.CC_DEPOSIT,CF.CC_ELECTRICITY_CAP,CF.CC_AIRCON_FIXED_FEE,CF.CC_AIRCON_QUARTERLY_FEE,CF.CC_DRYCLEAN_FEE,CF.CC_PROCESSING_FEE,CF.CC_CHECKOUT_CLEANING_FEE,CTD.CLP_STARTDATE,CTD.CLP_ENDDATE,CTD.CLP_TERMINATE,CTD.CLP_PRETERMINATE_DATE,CTD.CLP_GUEST_CARD,UASD.UASD_ACCESS_CARD,NC.NC_DATA,CPD.CPD_MOBILE,CPD.CPD_INTL_MOBILE,CPD.CPD_EMAIL,CPD.CPD_PASSPORT_NO,CPD.CPD_PASSPORT_DATE,CPD.CPD_EP_NO,CPD.CPD_EP_DATE,CPD.CPD_DOB,CPD.CPD_COMMENTS,ULD.ULD_LOGINID,DATE_FORMAT(CONVERT_TZ(CTD.CLP_TIMESTAMP,"+timeZoneFormat+"),'%d-%m-%Y %T') AS CTD_TIME_STAMP FROM  CUSTOMER_ENTRY_DETAILS CED LEFT JOIN CUSTOMER_COMPANY_DETAILS CCD on CED.CUSTOMER_ID=CCD.CUSTOMER_ID left join CUSTOMER_LP_DETAILS CTD on CED.CUSTOMER_ID=CTD.CUSTOMER_ID left join CUSTOMER_ACCESS_CARD_DETAILS CACD on CED.CUSTOMER_ID=CACD.CUSTOMER_ID and (CTD.UASD_ID=CACD.UASD_ID)left join UNIT_ACCESS_STAMP_DETAILS UASD on  (UASD.UASD_ID=CACD.UASD_ID) left join TEMP_CUSTOMER_SEARCH_FEE_DETAIL CF on  CED.CUSTOMER_ID=CF.CUSTOMER_ID left join CUSTOMER C on CED.CUSTOMER_ID=C.CUSTOMER_ID left join  CUSTOMER_PERSONAL_DETAILS CPD on CED.CUSTOMER_ID=CPD.CUSTOMER_ID ,NATIONALITY_CONFIGURATION NC ,UNIT U,USER_LOGIN_DETAILS ULD  where CCD.CCD_OFFICE_NO='"+CSRC_customerid1+"' AND (CED.UNIT_ID=U.UNIT_ID) and(CPD.NC_ID=NC.NC_ID) and  (CED.CED_REC_VER=CF.CUSTOMER_REC_VER) AND CED.CED_REC_VER=CTD.CED_REC_VER  AND ULD.ULD_ID=CTD.ULD_ID order by C.CUSTOMER_ID,CED.CED_REC_VER,CACD.CACD_GUEST_CARD";
    }
    if(CSRC_searchoption==29)
    {
      table_header=CSRC_customerid1;
      var temptablequery="CALL SP_CUSTOMER_SEARCH_TEMP_TABLE('"+CSRC_customerid1+"',"+null+","+CSRC_searchoption+",'"+UserStamp+"',@TABLENAME)";
      var CSRC_customerflextable_query="SELECT  CTD.CLP_TERMINATE,CED.CED_PRORATED,CED.CED_PRETERMINATE,U.UNIT_NO,C.CUSTOMER_ID,C.CUSTOMER_FIRST_NAME,C.CUSTOMER_LAST_NAME,CCD.CCD_COMPANY_NAME,CCD.CCD_COMPANY_ADDR,CCD.CCD_POSTAL_CODE,CCD.CCD_OFFICE_NO,CED.UASD_ID,CED.CED_REC_VER,CED.CED_SD_STIME,CED.CED_SD_ETIME,CED.CED_ED_STIME,CED.CED_ED_ETIME,CED.CED_LEASE_PERIOD,CED.CED_QUARTERS,CED.CED_RECHECKIN,CED.CED_EXTENSION,CED.CED_PROCESSING_WAIVED,CED.CED_PRETERMINATE,CED.CED_NOTICE_PERIOD,CED.CED_NOTICE_START_DATE,CED.CED_CANCEL_DATE,CF.CC_DEPOSIT,CF.CC_PAYMENT_AMOUNT,CF.CC_DEPOSIT,CF.CC_ELECTRICITY_CAP,CF.CC_AIRCON_FIXED_FEE,CF.CC_AIRCON_QUARTERLY_FEE,CF.CC_DRYCLEAN_FEE,CF.CC_PROCESSING_FEE,CF.CC_CHECKOUT_CLEANING_FEE,CTD.CLP_STARTDATE,CTD.CLP_ENDDATE,CTD.CLP_TERMINATE,CTD.CLP_PRETERMINATE_DATE,CTD.CLP_GUEST_CARD,UASD.UASD_ACCESS_CARD,NC.NC_DATA,CPD.CPD_MOBILE,CPD.CPD_INTL_MOBILE,CPD.CPD_EMAIL,CPD.CPD_PASSPORT_NO,CPD.CPD_PASSPORT_DATE,CPD.CPD_EP_NO,CPD.CPD_EP_DATE,CPD.CPD_DOB,CPD.CPD_COMMENTS,ULD.ULD_LOGINID,DATE_FORMAT(CONVERT_TZ(CTD.CLP_TIMESTAMP,"+timeZoneFormat+"),'%d-%m-%Y %T') AS CTD_TIME_STAMP FROM  CUSTOMER_ENTRY_DETAILS CED LEFT JOIN CUSTOMER_COMPANY_DETAILS CCD on CED.CUSTOMER_ID=CCD.CUSTOMER_ID left join CUSTOMER_LP_DETAILS CTD on CED.CUSTOMER_ID=CTD.CUSTOMER_ID left join CUSTOMER_ACCESS_CARD_DETAILS CACD on CED.CUSTOMER_ID=CACD.CUSTOMER_ID and (CTD.UASD_ID=CACD.UASD_ID)left join UNIT_ACCESS_STAMP_DETAILS UASD on  (UASD.UASD_ID=CACD.UASD_ID) left join TEMP_CUSTOMER_SEARCH_FEE_DETAIL CF on  CED.CUSTOMER_ID=CF.CUSTOMER_ID left join CUSTOMER C on CED.CUSTOMER_ID=C.CUSTOMER_ID left join  CUSTOMER_PERSONAL_DETAILS CPD on CED.CUSTOMER_ID=CPD.CUSTOMER_ID ,NATIONALITY_CONFIGURATION NC ,UNIT U,USER_LOGIN_DETAILS ULD  where CPD.CPD_PASSPORT_NO='"+CSRC_customerid1+"' AND (CED.UNIT_ID=U.UNIT_ID) and(CPD.NC_ID=NC.NC_ID) and  (CED.CED_REC_VER=CF.CUSTOMER_REC_VER) AND CED.CED_REC_VER=CTD.CED_REC_VER  AND ULD.ULD_ID=CTD.ULD_ID order by C.CUSTOMER_ID,CED.CED_REC_VER,CACD.CACD_GUEST_CARD";
    }
    if(CSRC_searchoption==30)
    {
      var temptablequery="CALL SP_CUSTOMER_SEARCH_TEMP_TABLE('"+CSRC_customerid1+"','"+CSRC_customerid2+"',"+CSRC_searchoption+",'"+UserStamp+"',@TABLENAME)";
      var CSRC_customerflextable_query="SELECT DISTINCT CTD.CLP_TERMINATE,CED.CED_PRORATED,CED.CED_PRETERMINATE,U.UNIT_NO,C.CUSTOMER_ID,C.CUSTOMER_FIRST_NAME,C.CUSTOMER_LAST_NAME,CCD.CCD_COMPANY_NAME,CCD.CCD_COMPANY_ADDR,CCD.CCD_POSTAL_CODE,CCD.CCD_OFFICE_NO,CED.UASD_ID,CED.CED_REC_VER,CED.CED_SD_STIME,CED.CED_SD_ETIME,CED.CED_ED_STIME,CED.CED_ED_ETIME,CED.CED_LEASE_PERIOD,CED.CED_QUARTERS,CED.CED_RECHECKIN,CED.CED_EXTENSION,CED.CED_PROCESSING_WAIVED,CED.CED_PRETERMINATE,CED.CED_NOTICE_PERIOD,CED.CED_NOTICE_START_DATE,CED.CED_CANCEL_DATE,CF.CC_DEPOSIT,CF.CC_PAYMENT_AMOUNT,CF.CC_DEPOSIT,CF.CC_ELECTRICITY_CAP,CF.CC_AIRCON_FIXED_FEE,CF.CC_AIRCON_QUARTERLY_FEE,CF.CC_DRYCLEAN_FEE,CF.CC_PROCESSING_FEE,CF.CC_CHECKOUT_CLEANING_FEE,CTD.CLP_STARTDATE,CTD.CLP_ENDDATE,CTD.CLP_TERMINATE,CTD.CLP_PRETERMINATE_DATE,CTD.CLP_GUEST_CARD,UASD.UASD_ACCESS_CARD,NC.NC_DATA,CPD.CPD_MOBILE,CPD.CPD_INTL_MOBILE,CPD.CPD_EMAIL,CPD.CPD_PASSPORT_NO,CPD.CPD_PASSPORT_DATE,CPD.CPD_EP_NO,CPD.CPD_EP_DATE,CPD.CPD_DOB,CPD.CPD_COMMENTS,ULD.ULD_LOGINID,DATE_FORMAT(CONVERT_TZ(CTD.CLP_TIMESTAMP,"+timeZoneFormat+"),'%d-%m-%Y %T') AS CTD_TIME_STAMP FROM  CUSTOMER_ENTRY_DETAILS CED LEFT JOIN CUSTOMER_COMPANY_DETAILS CCD on CED.CUSTOMER_ID=CCD.CUSTOMER_ID left join CUSTOMER_LP_DETAILS CTD on CED.CUSTOMER_ID=CTD.CUSTOMER_ID left join CUSTOMER_ACCESS_CARD_DETAILS CACD on CED.CUSTOMER_ID=CACD.CUSTOMER_ID and (CTD.UASD_ID=CACD.UASD_ID)left join UNIT_ACCESS_STAMP_DETAILS UASD on  (UASD.UASD_ID=CACD.UASD_ID) left join TEMP_CUSTOMER_SEARCH_FEE_DETAIL CF on  CED.CUSTOMER_ID=CF.CUSTOMER_ID left join CUSTOMER C on CED.CUSTOMER_ID=C.CUSTOMER_ID left join  CUSTOMER_PERSONAL_DETAILS CPD on CED.CUSTOMER_ID=CPD.CUSTOMER_ID ,NATIONALITY_CONFIGURATION NC ,UNIT U,USER_LOGIN_DETAILS ULD  where CF.CC_PAYMENT_AMOUNT BETWEEN "+CSRC_customerid1+" AND '"+CSRC_customerid2+"' AND (CED.UNIT_ID=U.UNIT_ID) and(CPD.NC_ID=NC.NC_ID) and  (CED.CED_REC_VER=CF.CUSTOMER_REC_VER) AND CED.CED_REC_VER=CTD.CED_REC_VER  AND ULD.ULD_ID=CTD.ULD_ID order by C.CUSTOMER_ID,CED.CED_REC_VER,CACD.CACD_GUEST_CARD";
    }
    if(CSRC_searchoption==31)
    {
      var table_header=CSRC_customerid1;
      var temptablequery="CALL SP_CUSTOMER_SEARCH_TEMP_TABLE("+CSRC_customerid1+","+null+","+CSRC_searchoption+",'"+UserStamp+"',@TABLENAME)";
      var CSRC_customerflextable_query="SELECT distinct CTD.CLP_TERMINATE,CED.CED_PRORATED,CED.CED_PRETERMINATE,U.UNIT_NO,C.CUSTOMER_ID,C.CUSTOMER_FIRST_NAME,C.CUSTOMER_LAST_NAME,CCD.CCD_COMPANY_NAME,CCD.CCD_COMPANY_ADDR,CCD.CCD_POSTAL_CODE,CCD.CCD_OFFICE_NO,CED.UASD_ID,CED.CED_REC_VER,CED.CED_SD_STIME,CED.CED_SD_ETIME,CED.CED_ED_STIME,CED.CED_ED_ETIME,CED.CED_LEASE_PERIOD,CED.CED_QUARTERS,CED.CED_RECHECKIN,CED.CED_EXTENSION,CED.CED_PROCESSING_WAIVED,CED.CED_PRETERMINATE,CED.CED_NOTICE_PERIOD,CED.CED_NOTICE_START_DATE,CED.CED_CANCEL_DATE,CF.CC_DEPOSIT,CF.CC_PAYMENT_AMOUNT,CF.CC_DEPOSIT,CF.CC_ELECTRICITY_CAP,CF.CC_AIRCON_FIXED_FEE,CF.CC_AIRCON_QUARTERLY_FEE,CF.CC_DRYCLEAN_FEE,CF.CC_PROCESSING_FEE,CF.CC_CHECKOUT_CLEANING_FEE,CTD.CLP_STARTDATE,CTD.CLP_ENDDATE,CTD.CLP_TERMINATE,CTD.CLP_PRETERMINATE_DATE,CTD.CLP_GUEST_CARD,UASD.UASD_ACCESS_CARD,NC.NC_DATA,CPD.CPD_MOBILE,CPD.CPD_INTL_MOBILE,CPD.CPD_EMAIL,CPD.CPD_PASSPORT_NO,CPD.CPD_PASSPORT_DATE,CPD.CPD_EP_NO,CPD.CPD_EP_DATE,CPD.CPD_DOB,CPD.CPD_COMMENTS,ULD.ULD_LOGINID,DATE_FORMAT(CONVERT_TZ(CTD.CLP_TIMESTAMP,"+timeZoneFormat+"),'%d-%m-%Y %T') AS CTD_TIME_STAMP FROM  CUSTOMER_ENTRY_DETAILS CED LEFT JOIN CUSTOMER_COMPANY_DETAILS CCD on CED.CUSTOMER_ID=CCD.CUSTOMER_ID left join CUSTOMER_LP_DETAILS CTD on CED.CUSTOMER_ID=CTD.CUSTOMER_ID left join CUSTOMER_ACCESS_CARD_DETAILS CACD on CED.CUSTOMER_ID=CACD.CUSTOMER_ID and (CTD.UASD_ID=CACD.UASD_ID)left join UNIT_ACCESS_STAMP_DETAILS UASD on  (UASD.UASD_ID=CACD.UASD_ID) left join TEMP_CUSTOMER_SEARCH_FEE_DETAIL CF on  CED.CUSTOMER_ID=CF.CUSTOMER_ID left join CUSTOMER C on CED.CUSTOMER_ID=C.CUSTOMER_ID left join  CUSTOMER_PERSONAL_DETAILS CPD on CED.CUSTOMER_ID=CPD.CUSTOMER_ID ,NATIONALITY_CONFIGURATION NC ,UNIT U,USER_LOGIN_DETAILS ULD  where U.UNIT_NO="+CSRC_customerid1+" AND (CED.UNIT_ID=U.UNIT_ID) and(CPD.NC_ID=NC.NC_ID) and  (CED.CED_REC_VER=CF.CUSTOMER_REC_VER) AND CED.CED_REC_VER=CTD.CED_REC_VER  AND ULD.ULD_ID=CTD.ULD_ID order by C.CUSTOMER_ID,CED.CED_REC_VER,CACD.CACD_GUEST_CARD";
    }
    if(CSRC_searchoption==32)
    {
      table_header=CSRC_customerid1;
      var temptablequery="CALL SP_CUSTOMER_SEARCH_TEMP_TABLE("+CSRC_customerid1+","+null+","+CSRC_searchoption+",'"+UserStamp+"',@TABLENAME)";
      var CSRC_customerflextable_query="SELECT DISTINCT CTD.CLP_TERMINATE,CED.CED_PRORATED,CED.CED_PRETERMINATE,U.UNIT_NO,C.CUSTOMER_ID,C.CUSTOMER_FIRST_NAME,C.CUSTOMER_LAST_NAME,CCD.CCD_COMPANY_NAME,CCD.CCD_COMPANY_ADDR,CCD.CCD_POSTAL_CODE,CCD.CCD_OFFICE_NO,CED.UASD_ID,CED.CED_REC_VER,CED.CED_SD_STIME,CED.CED_SD_ETIME,CED.CED_ED_STIME,CED.CED_ED_ETIME,CED.CED_LEASE_PERIOD,CED.CED_QUARTERS,CED.CED_RECHECKIN,CED.CED_EXTENSION,CED.CED_PROCESSING_WAIVED,CED.CED_PRETERMINATE,CED.CED_NOTICE_PERIOD,CED.CED_NOTICE_START_DATE,CED.CED_CANCEL_DATE,CF.CC_DEPOSIT,CF.CC_PAYMENT_AMOUNT,CF.CC_DEPOSIT,CF.CC_ELECTRICITY_CAP,CF.CC_AIRCON_FIXED_FEE,CF.CC_AIRCON_QUARTERLY_FEE,CF.CC_DRYCLEAN_FEE,CF.CC_PROCESSING_FEE,CF.CC_CHECKOUT_CLEANING_FEE,CTD.CLP_STARTDATE,CTD.CLP_ENDDATE,CTD.CLP_TERMINATE,CTD.CLP_PRETERMINATE_DATE,CTD.CLP_GUEST_CARD,UASD.UASD_ACCESS_CARD,NC.NC_DATA,CPD.CPD_MOBILE,CPD.CPD_INTL_MOBILE,CPD.CPD_EMAIL,CPD.CPD_PASSPORT_NO,CPD.CPD_PASSPORT_DATE,CPD.CPD_EP_NO,CPD.CPD_EP_DATE,CPD.CPD_DOB,CPD.CPD_COMMENTS,ULD.ULD_LOGINID,DATE_FORMAT(CONVERT_TZ(CTD.CLP_TIMESTAMP,"+timeZoneFormat+"),'%d-%m-%Y %T') AS CTD_TIME_STAMP FROM  CUSTOMER_ENTRY_DETAILS CED LEFT JOIN CUSTOMER_COMPANY_DETAILS CCD on CED.CUSTOMER_ID=CCD.CUSTOMER_ID left join CUSTOMER_LP_DETAILS CTD on CED.CUSTOMER_ID=CTD.CUSTOMER_ID left join CUSTOMER_ACCESS_CARD_DETAILS CACD on CED.CUSTOMER_ID=CACD.CUSTOMER_ID and (CTD.UASD_ID=CACD.UASD_ID)left join UNIT_ACCESS_STAMP_DETAILS UASD on  (UASD.UASD_ID=CACD.UASD_ID) left join TEMP_CUSTOMER_SEARCH_FEE_DETAIL CF on  CED.CUSTOMER_ID=CF.CUSTOMER_ID left join CUSTOMER C on CED.CUSTOMER_ID=C.CUSTOMER_ID left join  CUSTOMER_PERSONAL_DETAILS CPD on CED.CUSTOMER_ID=CPD.CUSTOMER_ID ,NATIONALITY_CONFIGURATION NC ,UNIT U,USER_LOGIN_DETAILS ULD  where CPD.CPD_INTL_MOBILE='"+CSRC_customerid1+"' AND (CED.UNIT_ID=U.UNIT_ID) and(CPD.NC_ID=NC.NC_ID) and  (CED.CED_REC_VER=CF.CUSTOMER_REC_VER) AND CED.CED_REC_VER=CTD.CED_REC_VER  AND ULD.ULD_ID=CTD.ULD_ID order by C.CUSTOMER_ID,CED.CED_REC_VER,CACD.CACD_GUEST_CARD";
    }
    if(CSRC_searchoption==33)
    {
      var roomtypedatesplit=CSRC_customerid1.split('-');
      table_header=roomtypedatesplit[1];
      temptablequery="CALL SP_CUSTOMER_SEARCH_TEMP_TABLE('"+roomtypedatesplit[1]+"',"+null+","+CSRC_searchoption+",'"+UserStamp+"',@TABLENAME)";
      var CSRC_customerflextable_query="SELECT DISTINCT CTD.CLP_TERMINATE,CED.CED_PRORATED,CED.CED_PRETERMINATE,U.UNIT_NO,C.CUSTOMER_ID,C.CUSTOMER_FIRST_NAME,C.CUSTOMER_LAST_NAME,CCD.CCD_COMPANY_NAME,CCD.CCD_COMPANY_ADDR,CCD.CCD_POSTAL_CODE,CCD.CCD_OFFICE_NO,CED.UASD_ID,CED.CED_REC_VER,CED.CED_SD_STIME,CED.CED_SD_ETIME,CED.CED_ED_STIME,CED.CED_ED_ETIME,CED.CED_LEASE_PERIOD,CED.CED_QUARTERS,CED.CED_RECHECKIN,CED.CED_EXTENSION,CED.CED_PROCESSING_WAIVED,CED.CED_PRETERMINATE,CED.CED_NOTICE_PERIOD,CED.CED_NOTICE_START_DATE,CED.CED_CANCEL_DATE,CF.CC_DEPOSIT,CF.CC_PAYMENT_AMOUNT,CF.CC_DEPOSIT,CF.CC_ELECTRICITY_CAP,CF.CC_AIRCON_FIXED_FEE,CF.CC_AIRCON_QUARTERLY_FEE,CF.CC_DRYCLEAN_FEE,CF.CC_PROCESSING_FEE,CF.CC_CHECKOUT_CLEANING_FEE,CTD.CLP_STARTDATE,CTD.CLP_ENDDATE,CTD.CLP_TERMINATE,CTD.CLP_PRETERMINATE_DATE,CTD.CLP_GUEST_CARD,UASD.UASD_ACCESS_CARD,NC.NC_DATA,CPD.CPD_MOBILE,CPD.CPD_INTL_MOBILE,CPD.CPD_EMAIL,CPD.CPD_PASSPORT_NO,CPD.CPD_PASSPORT_DATE,CPD.CPD_EP_NO,CPD.CPD_EP_DATE,CPD.CPD_DOB,CPD.CPD_COMMENTS,ULD.ULD_LOGINID,DATE_FORMAT(CONVERT_TZ(CTD.CLP_TIMESTAMP,"+timeZoneFormat+"),'%d-%m-%Y %T') AS CTD_TIME_STAMP FROM  CUSTOMER_ENTRY_DETAILS CED LEFT JOIN CUSTOMER_COMPANY_DETAILS CCD on CED.CUSTOMER_ID=CCD.CUSTOMER_ID left join CUSTOMER_LP_DETAILS CTD on CED.CUSTOMER_ID=CTD.CUSTOMER_ID left join CUSTOMER_ACCESS_CARD_DETAILS CACD on CED.CUSTOMER_ID=CACD.CUSTOMER_ID and (CTD.UASD_ID=CACD.UASD_ID)left join UNIT_ACCESS_STAMP_DETAILS UASD on  (UASD.UASD_ID=CACD.UASD_ID) left join TEMP_CUSTOMER_SEARCH_FEE_DETAIL CF on  CED.CUSTOMER_ID=CF.CUSTOMER_ID left join CUSTOMER C on CED.CUSTOMER_ID=C.CUSTOMER_ID left join  CUSTOMER_PERSONAL_DETAILS CPD on CED.CUSTOMER_ID=CPD.CUSTOMER_ID ,NATIONALITY_CONFIGURATION NC ,UNIT U,USER_LOGIN_DETAILS ULD  where (CED.UNIT_ID=U.UNIT_ID) and(CPD.NC_ID=NC.NC_ID) and  (CED.CED_REC_VER=CF.CUSTOMER_REC_VER) AND CED.CED_REC_VER=CTD.CED_REC_VER  AND ULD.ULD_ID=CTD.ULD_ID order by C.CUSTOMER_ID,CED.CED_REC_VER,CACD.CACD_GUEST_CARD";
    } 
    if(CSRC_searchoption==34)
    {
      table_header=CSRC_customerid1;
      temptablequery="CALL SP_CUSTOMER_SEARCH_TEMP_TABLE('"+CSRC_customerid1+"',"+null+","+CSRC_searchoption+",'"+UserStamp+"',@TABLENAME)";
      var CSRC_customerflextable_query="SELECT DISTINCT CTD.CLP_TERMINATE,CED.CED_PRORATED,CED.CED_PRETERMINATE,U.UNIT_NO,C.CUSTOMER_ID,C.CUSTOMER_FIRST_NAME,C.CUSTOMER_LAST_NAME,CCD.CCD_COMPANY_NAME,CCD.CCD_COMPANY_ADDR,CCD.CCD_POSTAL_CODE,CCD.CCD_OFFICE_NO,CED.UASD_ID,CED.CED_REC_VER,CED.CED_SD_STIME,CED.CED_SD_ETIME,CED.CED_ED_STIME,CED.CED_ED_ETIME,CED.CED_LEASE_PERIOD,CED.CED_QUARTERS,CED.CED_RECHECKIN,CED.CED_EXTENSION,CED.CED_PROCESSING_WAIVED,CED.CED_PRETERMINATE,CED.CED_NOTICE_PERIOD,CED.CED_NOTICE_START_DATE,CED.CED_CANCEL_DATE,CF.CC_DEPOSIT,CF.CC_PAYMENT_AMOUNT,CF.CC_DEPOSIT,CF.CC_ELECTRICITY_CAP,CF.CC_AIRCON_FIXED_FEE,CF.CC_AIRCON_QUARTERLY_FEE,CF.CC_DRYCLEAN_FEE,CF.CC_PROCESSING_FEE,CF.CC_CHECKOUT_CLEANING_FEE,CTD.CLP_STARTDATE,CTD.CLP_ENDDATE,CTD.CLP_TERMINATE,CTD.CLP_PRETERMINATE_DATE,CTD.CLP_GUEST_CARD,UASD.UASD_ACCESS_CARD,NC.NC_DATA,CPD.CPD_MOBILE,CPD.CPD_INTL_MOBILE,CPD.CPD_EMAIL,CPD.CPD_PASSPORT_NO,CPD.CPD_PASSPORT_DATE,CPD.CPD_EP_NO,CPD.CPD_EP_DATE,CPD.CPD_DOB,CPD.CPD_COMMENTS,ULD.ULD_LOGINID,DATE_FORMAT(CONVERT_TZ(CTD.CLP_TIMESTAMP,"+timeZoneFormat+"),'%d-%m-%Y %T') AS CTD_TIME_STAMP FROM  CUSTOMER_ENTRY_DETAILS CED LEFT JOIN CUSTOMER_COMPANY_DETAILS CCD on CED.CUSTOMER_ID=CCD.CUSTOMER_ID left join CUSTOMER_LP_DETAILS CTD on CED.CUSTOMER_ID=CTD.CUSTOMER_ID left join CUSTOMER_ACCESS_CARD_DETAILS CACD on CED.CUSTOMER_ID=CACD.CUSTOMER_ID and (CTD.UASD_ID=CACD.UASD_ID)left join UNIT_ACCESS_STAMP_DETAILS UASD on  (UASD.UASD_ID=CACD.UASD_ID) left join TEMP_CUSTOMER_SEARCH_FEE_DETAIL CF on  CED.CUSTOMER_ID=CF.CUSTOMER_ID left join CUSTOMER C on CED.CUSTOMER_ID=C.CUSTOMER_ID left join  CUSTOMER_PERSONAL_DETAILS CPD on CED.CUSTOMER_ID=CPD.CUSTOMER_ID ,NATIONALITY_CONFIGURATION NC ,UNIT U,USER_LOGIN_DETAILS ULD  where  (CED.UNIT_ID=U.UNIT_ID) and(CPD.NC_ID=NC.NC_ID) and  (CED.CED_REC_VER=CF.CUSTOMER_REC_VER) AND CED.CED_REC_VER=CTD.CED_REC_VER  AND ULD.ULD_ID=CTD.ULD_ID order by C.CUSTOMER_ID,CED.CED_REC_VER,CACD.CACD_GUEST_CARD";
    }
    var CSRC_customerid=CSRC_customerid1;
    var CSRC_tempstmt=CSRC_conn.createStatement();
    CSRC_tempstmt.execute(temptablequery);
    CSRC_tempstmt.close();
    var CSRC_temptablestmt=CSRC_conn.createStatement();
    var CSRC_temptableresult=CSRC_temptablestmt.executeQuery('SELECT @TABLENAME');
    if(CSRC_temptableresult.next())
    {
      var CSRC_TEMPTABLENAME=CSRC_temptableresult.getString(1);
    }
    CSRC_temptableresult.close();
    CSRC_temptablestmt.close();
    CSRC_customerflextable_query=CSRC_customerflextable_query.replace('TEMP_CUSTOMER_SEARCH_FEE_DETAIL',CSRC_TEMPTABLENAME)
    var CSRC_custstmt = CSRC_conn.createStatement();
    var CSRC_ctust_rs = CSRC_custstmt.executeQuery(CSRC_customerflextable_query);
    var count = 0;
    var CSRC_finalyarray =[];
    var CSRC_personalarray =[];
    while(CSRC_ctust_rs.next())
    {
      var CSRCterminate=CSRC_ctust_rs.getString("CLP_TERMINATE");
      if(CSRCterminate==null){CSRCterminate=""}
      var CSRC_preterm=CSRC_ctust_rs.getString("CED_PRETERMINATE");
      if(CSRC_preterm==null){CSRC_preterm='';}   
      var proratedflag=CSRC_ctust_rs.getString("CED_PRORATED");
      if(proratedflag==null){proratedflag=""}
      var CSRC_recheckin=CSRC_ctust_rs.getString("CED_RECHECKIN");
      if(CSRC_recheckin==null){CSRC_recheckin="";}
      var CSRC_Processwaived=CSRC_ctust_rs.getString("CED_PROCESSING_WAIVED");
      if(CSRC_Processwaived==null){CSRC_Processwaived="";}
      var CSRC_unitno = CSRC_ctust_rs.getString("UNIT_NO");
      var CSRC_customerid = CSRC_ctust_rs.getString("CUSTOMER_ID");
      var CSRC_company = CSRC_ctust_rs.getString("CCD_COMPANY_NAME");
      if(CSRC_company == null){CSRC_company = ""}
      var CSRC_compadd = CSRC_ctust_rs.getString("CCD_COMPANY_ADDR");
      if(CSRC_compadd == null){CSRC_compadd = ""}
      var CSRC_postalcode =  CSRC_ctust_rs.getString("CCD_POSTAL_CODE");
      if(CSRC_postalcode == null){CSRC_postalcode = ""}
      var CSRC_firstname = CSRC_ctust_rs.getString("CUSTOMER_FIRST_NAME");
      var CSRC_lastname = CSRC_ctust_rs.getString("CUSTOMER_LAST_NAME");
      var CSRC_startdate =eilib.SqlDateFormat(CSRC_ctust_rs.getString("CLP_STARTDATE"));
      var CSRC_enddate = eilib.SqlDateFormat(CSRC_ctust_rs.getString("CLP_ENDDATE"));
      var CSRC_cardno = CSRC_ctust_rs.getString("UASD_ACCESS_CARD");
      if(CSRC_cardno == null){CSRC_cardno = ""}
      var CSRC_guestcard =  CSRC_ctust_rs.getString("CLP_GUEST_CARD");
      if(CSRC_guestcard == null){CSRC_guestcard = ""}
      var CSRC_deposit = CSRC_ctust_rs.getString("CC_DEPOSIT"); 
      if(CSRC_deposit == null){CSRC_deposit = ""}
      var CSRC_rental = CSRC_ctust_rs.getString("CC_PAYMENT_AMOUNT");        
      var CSRC_electricitycap = CSRC_ctust_rs.getString("CC_ELECTRICITY_CAP"); 
      if(CSRC_electricitycap == null){CSRC_electricitycap = ""}
      var CSRC_airconfixedfee = CSRC_ctust_rs.getString("CC_AIRCON_FIXED_FEE");
      if(CSRC_airconfixedfee == null){CSRC_airconfixedfee = ""}
      var CSRC_airconquartelyfee = CSRC_ctust_rs.getString("CC_AIRCON_QUARTERLY_FEE");
      if(CSRC_airconquartelyfee == null){CSRC_airconquartelyfee = ""}
      var CSRC_epno = CSRC_ctust_rs.getString("CPD_EP_NO");
      if(CSRC_epno == null){CSRC_epno = ""}
      var CSRC_epdate = CSRC_ctust_rs.getString("CPD_EP_DATE");
      if(CSRC_epdate == null){CSRC_epdate = ""}else{CSRC_epdate =eilib.SqlDateFormat(CSRC_epdate)}
      var CSRC_passportno = CSRC_ctust_rs.getString("CPD_PASSPORT_NO");
      if(CSRC_passportno == null){CSRC_passportno = ""}
      var CSRC_passportdate = CSRC_ctust_rs.getString("CPD_PASSPORT_DATE");
      if(CSRC_passportdate == null){CSRC_passportdate = ""}else{CSRC_passportdate =eilib.SqlDateFormat(CSRC_passportdate)}
      var CSRC_drycleanfee = CSRC_ctust_rs.getString("CC_DRYCLEAN_FEE");
      if(CSRC_drycleanfee == null){CSRC_drycleanfee = ""}
      var CSRC_processingfee = CSRC_ctust_rs.getString("CC_PROCESSING_FEE");
      if(CSRC_processingfee == null){CSRC_processingfee = ""}
      var CSRC_checkoutcleaningfee = CSRC_ctust_rs.getString("CC_CHECKOUT_CLEANING_FEE");
      if(CSRC_checkoutcleaningfee == null){CSRC_checkoutcleaningfee = ""}
      var CSRC_noticeperiod = CSRC_ctust_rs.getString("CED_NOTICE_PERIOD");
      if(CSRC_noticeperiod == null){CSRC_noticeperiod = ""}
      var CSRC_noticedate = CSRC_ctust_rs.getString("CED_NOTICE_START_DATE");
      if(CSRC_noticedate == null){CSRC_noticedate = ""}else{CSRC_noticedate =eilib.SqlDateFormat(CSRC_noticedate)}
      var CSRC_nationality = CSRC_ctust_rs.getString("NC_DATA");
      var CSRC_dob= CSRC_ctust_rs.getString("CPD_DOB");
      if(CSRC_dob == null){CSRC_dob = ""}else{CSRC_dob=eilib.SqlDateFormat(CSRC_dob)};
      var CSRC_lease=CSRC_ctust_rs.getString("CED_LEASE_PERIOD")
      if(CSRC_lease==null){CSRC_lease=""}
      var CSRC_mobile = CSRC_ctust_rs.getString("CPD_MOBILE");
      if(CSRC_mobile == null){CSRC_mobile = ""}
      var CSRC_mobile1 = CSRC_ctust_rs.getString("CPD_INTL_MOBILE");
      if(CSRC_mobile1 == null){CSRC_mobile1 = ""}
      var CSRC_officeno = CSRC_ctust_rs.getString("CCD_OFFICE_NO");
      if(CSRC_officeno == null){CSRC_officeno = ""}
      var CSRC_email = CSRC_ctust_rs.getString("CPD_EMAIL");
      var CSRC_extension= CSRC_ctust_rs.getString("CED_EXTENSION");
      if(CSRC_extension == null){CSRC_extension = ""}
      var CSRC_preterminate = CSRC_ctust_rs.getString("CLP_PRETERMINATE_DATE");
      if(CSRC_preterminate == null){CSRC_preterminate = ""}else{CSRC_preterminate =eilib.SqlDateFormat(CSRC_preterminate)}
      var CSRC_redver = CSRC_ctust_rs.getString("CED_REC_VER");         
      var CSRC_canceldate = CSRC_ctust_rs.getString("CED_CANCEL_DATE");
      if(CSRC_canceldate == null){CSRC_canceldate = ""}else{CSRC_canceldate =eilib.SqlDateFormat(CSRC_canceldate)}
      var CSRC_comments = CSRC_ctust_rs.getString("CPD_COMMENTS");
      if(CSRC_comments == null){CSRC_comments = ""}
      var CSRC_QUARTERS=CSRC_ctust_rs.getString("CED_QUARTERS");
      if(CSRC_QUARTERS==null){CSRC_QUARTERS=""}
      var CSRC_userstamp = CSRC_ctust_rs.getString("ULD_LOGINID");
      var CSRC_timestamp = CSRC_ctust_rs.getString("CTD_TIME_STAMP"); 
      var CSRC_roomtypeid=CSRC_ctust_rs.getString("UASD_ID");
      if(CSRC_searchoption!=33)
      {
        var CCRE_roomtypestmt=CSRC_conn.createStatement();
        var CCRE_roomtypequery="SELECT URTD.URTD_ROOM_TYPE FROM UNIT_ROOM_TYPE_DETAILS URTD, UNIT_ACCESS_STAMP_DETAILS UASD,CUSTOMER_ENTRY_DETAILS CED WHERE (CED.UASD_ID="+CSRC_roomtypeid+") AND(UASD.UASD_ID=CED.UASD_ID) AND(UASD.URTD_ID=URTD.URTD_ID)";
        var CCRE_roomtyperesult=CCRE_roomtypestmt.executeQuery(CCRE_roomtypequery);
        while(CCRE_roomtyperesult.next())
        {
          var CSRC_roomtype=CCRE_roomtyperesult.getString("URTD_ROOM_TYPE");
        }
        CCRE_roomtyperesult.close();
        CCRE_roomtypestmt.close();
      }
      else
      {
        CSRC_roomtype=roomtypedatesplit[1];  
      }
      count++;
      var personaldetails=CSRC_customerid+'^'+CSRC_firstname+'^'+CSRC_lastname+'^'+CSRC_company+'^'+CSRC_compadd+'^'+CSRC_postalcode+'^'+CSRC_email+'^'+CSRC_mobile+'^'+CSRC_mobile1+'^'+CSRC_officeno+'^'+CSRC_dob+'^'+CSRC_nationality+'^'+CSRC_passportno+'^'+CSRC_passportdate+'^'+CSRC_epno+'^'+CSRC_epdate+'^'+CSRC_comments
      CSRC_personalarray.push(personaldetails);
      var values_array={'customerid':CSRC_customerid,'recver':CSRC_redver,'guestcard':CSRC_guestcard, 'Canceldate':CSRC_canceldate,'airconfixedfee':CSRC_airconfixedfee,'airconquartelyfee':CSRC_airconquartelyfee,'preterminatedate':CSRC_preterminate,'redver':CSRC_redver,'customerid':CSRC_customerid,'unitno': CSRC_unitno,'firstname':CSRC_firstname,'lastname':CSRC_lastname,'email':CSRC_email,'mobile1':CSRC_mobile,'mobile2':CSRC_mobile1,'officeno':CSRC_officeno,'dob':CSRC_dob,'passportno':CSRC_passportno,'passportdate':CSRC_passportdate,'epno':CSRC_epno,'epdate':CSRC_epdate,'extension':CSRC_extension,'roomtype':CSRC_roomtype,'cardno':CSRC_cardno,'startdate':CSRC_startdate,'enddate':CSRC_enddate,'lease':CSRC_lease,'QUARTERS':CSRC_QUARTERS,'noticeperiod':CSRC_noticeperiod,'noticedate':CSRC_noticedate,'electricitycap':CSRC_electricitycap,'drycleanfee':CSRC_drycleanfee,'checkoutcleaningfee':CSRC_checkoutcleaningfee,'deposit':CSRC_deposit,'rental':CSRC_rental,'processingfee':CSRC_processingfee,'comments':CSRC_comments,'company':CSRC_company,'companyaddress':CSRC_compadd,'postalcode': CSRC_postalcode,'nationality':CSRC_nationality,'userstamp': CSRC_userstamp,'timestamp':CSRC_timestamp,'recheckin':CSRC_recheckin,'processwaived':CSRC_Processwaived,'pre_terminate':CSRC_preterm,'prorated':proratedflag,'term':CSRCterminate}
      CSRC_finalyarray.push(values_array);
    }
    if(CSRC_searchoption==21)
    {
      table_header=CSRC_firstname+' '+CSRC_lastname  
    }
    CSRC_personalarray=eilib.unique(CSRC_personalarray)
    var searchreturnarray=[CSRC_finalyarray,CSRC_searchoption,table_header,CSRC_personalarray];
    var CSRC_tempdelstmt=CSRC_conn.createStatement();
    CSRC_tempdelstmt.execute("DROP TABLE "+CSRC_TEMPTABLENAME+"");
    CSRC_tempdelstmt.close();
    return searchreturnarray;
    CSRC_conn.close();
  }
  function CSRC_selectedcustomerrecverdetails(CSRC_customerid,CSRC_customerrecver,CSRC_unit)
  {
    var CSRC_conn = eilib.db_GetConnection();
    var roomtypearray=eilib.CUST_getRoomType(CSRC_conn,CSRC_unit, 'CCRE_nullpara');
    var CSRC_tempstmt=CSRC_conn.createStatement();
    CSRC_tempstmt.execute("CALL SP_CUSTOMER_SEARCH_TEMP_FEE_DETAIL("+CSRC_customerid+",'"+UserStamp+"',@CUSTOMER_SEARCH_FEE_TEMPTBLNAME)");
    var CSRC_TEMPTTABLERESULT=CSRC_tempstmt.executeQuery("SELECT @CUSTOMER_SEARCH_FEE_TEMPTBLNAME");
    while(CSRC_TEMPTTABLERESULT.next())
    {
      var CSRC_TEMPTTABLENAME=CSRC_TEMPTTABLERESULT.getString(1);
    }
    CSRC_TEMPTTABLERESULT.close();
    CSRC_tempstmt.close();
    var CSRC_customerflextable_query = "SELECT DISTINCT CED.CED_PROCESSING_WAIVED,CED.CED_PRORATED,U.UNIT_NO,C.CUSTOMER_ID,C.CUSTOMER_FIRST_NAME,C.CUSTOMER_LAST_NAME,CCD.CCD_COMPANY_NAME,CCD.CCD_COMPANY_ADDR,CCD.CCD_POSTAL_CODE,CCD.CCD_OFFICE_NO,CED.UASD_ID,CED.CED_REC_VER,CED.CED_LEASE_PERIOD,CED.CED_QUARTERS,CED.CED_RECHECKIN,CED.CED_EXTENSION,CED.CED_PRETERMINATE,CTD.CLP_PRETERMINATE_DATE,CED.CED_NOTICE_PERIOD,CED.CED_NOTICE_START_DATE,CED.CED_CANCEL_DATE,CF.CC_DEPOSIT,CF.CC_PAYMENT_AMOUNT,CF.CC_DEPOSIT,CF.CC_ELECTRICITY_CAP,CF.CC_AIRCON_FIXED_FEE,CF.CC_AIRCON_QUARTERLY_FEE,CF.CC_DRYCLEAN_FEE,CF.CC_PROCESSING_FEE,CF.CC_CHECKOUT_CLEANING_FEE,CTD.CLP_STARTDATE,CTD.CLP_ENDDATE,CTD.CLP_TERMINATE,CTD.CLP_PRETERMINATE_DATE,CTD.CLP_GUEST_CARD,UASD.UASD_ACCESS_CARD,NC.NC_DATA,CPD.CPD_MOBILE,CPD.CPD_INTL_MOBILE,CPD.CPD_EMAIL,CPD.CPD_PASSPORT_NO,CPD.CPD_PASSPORT_DATE,CPD.CPD_EP_NO,CPD.CPD_EP_DATE,CPD.CPD_DOB,CPD.CPD_COMMENTS,ULD.ULD_LOGINID,CTD.CLP_TIMESTAMP,CTPA.CTP_DATA AS CED_SD_STIME, CTPB.CTP_DATA AS CED_SD_ETIME,CTPC.CTP_DATA AS CED_ED_STIME, CTPD.CTP_DATA AS CED_ED_ETIME FROM  CUSTOMER_ENTRY_DETAILS CED LEFT JOIN CUSTOMER_TIME_PROFILE CTPA ON CED.CED_SD_STIME = CTPA.CTP_ID LEFT JOIN CUSTOMER_TIME_PROFILE CTPB ON CED.CED_SD_ETIME = CTPB.CTP_ID LEFT JOIN CUSTOMER_TIME_PROFILE CTPC ON CED.CED_ED_STIME = CTPC.CTP_ID LEFT JOIN CUSTOMER_TIME_PROFILE CTPD ON CED.CED_ED_ETIME = CTPD.CTP_ID LEFT JOIN CUSTOMER_COMPANY_DETAILS CCD on CED.CUSTOMER_ID=CCD.CUSTOMER_ID left join CUSTOMER_LP_DETAILS CTD on CED.CUSTOMER_ID=CTD.CUSTOMER_ID left join CUSTOMER_ACCESS_CARD_DETAILS CACD on CED.CUSTOMER_ID=CACD.CUSTOMER_ID and (CTD.UASD_ID=CACD.UASD_ID)left join UNIT_ACCESS_STAMP_DETAILS UASD on  (UASD.UASD_ID=CACD.UASD_ID) left join "+CSRC_TEMPTTABLENAME+" CF on  CED.CUSTOMER_ID=CF.CUSTOMER_ID left join CUSTOMER C on CED.CUSTOMER_ID=C.CUSTOMER_ID left join  CUSTOMER_PERSONAL_DETAILS CPD on CED.CUSTOMER_ID=CPD.CUSTOMER_ID ,NATIONALITY_CONFIGURATION NC ,UNIT U,USER_LOGIN_DETAILS ULD  where  (CED.UNIT_ID=U.UNIT_ID) and(CPD.NC_ID=NC.NC_ID) and  (CED.CED_REC_VER=CF.CUSTOMER_VER) AND CED.CED_REC_VER="+CSRC_customerrecver+" AND C.CUSTOMER_ID="+CSRC_customerid+" AND ((CACD.ACN_ID BETWEEN 1 AND 4) OR CACD.ACN_ID IS NULL) AND CED.CED_REC_VER=CTD.CED_REC_VER AND CTD.ULD_ID=ULD.ULD_ID order by C.CUSTOMER_ID,CED.CED_REC_VER,CACD.CACD_GUEST_CARD";
    var CSRC_custstmt = CSRC_conn.createStatement();
    var CSRC_ctust_rs = CSRC_custstmt.executeQuery(CSRC_customerflextable_query);
    var count = 0;
    var CSRC_accesscardarray = [];
    var tick_accesscard=[];
    var STARTENDDATE_ARRAY=[];
    while(CSRC_ctust_rs.next())
    {
      var waivedflag=CSRC_ctust_rs.getString("CED_PROCESSING_WAIVED");
      if(waivedflag==null)
      {
        var tickwaived='null';
        waivedflag='';
      }
      else
      {
        tickwaived=waivedflag;
      }
      var proratedflag=CSRC_ctust_rs.getString("CED_PRORATED");
      if(proratedflag==null)
      {
        var tickprorated='null';
        proratedflag='';
      }
      else
      {
        tickprorated=proratedflag;
      }
      var CSRC_unitno = CSRC_ctust_rs.getString("UNIT_NO")
      var CSRC_customerid = CSRC_ctust_rs.getString("CUSTOMER_ID");
      var CSRC_company = CSRC_ctust_rs.getString("CCD_COMPANY_NAME");
      if(CSRC_company == null){CSRC_company = ""}
      var CSRC_compadd = CSRC_ctust_rs.getString("CCD_COMPANY_ADDR");
      if(CSRC_compadd == null){CSRC_compadd = ""}
      var CSRC_postalcode =  CSRC_ctust_rs.getString("CCD_POSTAL_CODE");
      if(CSRC_postalcode == null){CSRC_postalcode = ""}
      var CSRC_firstname = CSRC_ctust_rs.getString("CUSTOMER_FIRST_NAME");
      var CSRC_lastname = CSRC_ctust_rs.getString("CUSTOMER_LAST_NAME");
      var CSRC_cardno = CSRC_ctust_rs.getString("UASD_ACCESS_CARD");
      if(CSRC_cardno == null){CSRC_cardno = ""}
      var CSRC_guestcard =  CSRC_ctust_rs.getString("CLP_GUEST_CARD");
      if(CSRC_guestcard == null){CSRC_guestcard = ""}
      var CSRC_deposit = CSRC_ctust_rs.getString("CC_DEPOSIT"); 
      if(CSRC_deposit == null){CSRC_deposit = "";var deposit=null}else{deposit=CSRC_deposit}
      var CSRC_rental = CSRC_ctust_rs.getString("CC_PAYMENT_AMOUNT");        
      var CSRC_electricitycap = CSRC_ctust_rs.getString("CC_ELECTRICITY_CAP"); 
      if(CSRC_electricitycap == null){CSRC_electricitycap = "";var electricity=""}else{electricity=CSRC_electricitycap}
      var CSRC_airconfixedfee = CSRC_ctust_rs.getString("CC_AIRCON_FIXED_FEE");
      if(CSRC_airconfixedfee == null){CSRC_airconfixedfee = "";var airconfixedfee="" }else{airconfixedfee=CSRC_airconfixedfee}
      var CSRC_airconquartelyfee = CSRC_ctust_rs.getString("CC_AIRCON_QUARTERLY_FEE");
      if(CSRC_airconquartelyfee == null){CSRC_airconquartelyfee = "";var airconquartelyfee=""}else{airconquartelyfee=CSRC_airconquartelyfee}
      var CSRC_epno = CSRC_ctust_rs.getString("CPD_EP_NO");
      if(CSRC_epno == null){CSRC_epno = "";var epno=null}else{epno=CSRC_epno}
      var CSRC_epdate = CSRC_ctust_rs.getString("CPD_EP_DATE");
      if(CSRC_epdate == null){CSRC_epdate = ""}else{CSRC_epdate =eilib.SqlDateFormat(CSRC_ctust_rs.getString("CPD_EP_DATE"));}
      var CSRC_passportno = CSRC_ctust_rs.getString("CPD_PASSPORT_NO");
      if(CSRC_passportno == null){CSRC_passportno = "";var passportno=""}else{passportno=CSRC_passportno}
      var CSRC_passportdate = CSRC_ctust_rs.getString("CPD_PASSPORT_DATE");
      if(CSRC_passportdate == null){CSRC_passportdate = ""}else{CSRC_passportdate =eilib.SqlDateFormat(CSRC_ctust_rs.getString("CPD_PASSPORT_DATE"));}
      var CSRC_drycleanfee = CSRC_ctust_rs.getString("CC_DRYCLEAN_FEE");
      if(CSRC_drycleanfee == null){CSRC_drycleanfee = "";var drycleanfee=""}else{drycleanfee=CSRC_drycleanfee}
      var CSRC_processingfee = CSRC_ctust_rs.getString("CC_PROCESSING_FEE");
      if(CSRC_processingfee == null){CSRC_processingfee = "";var processingfee=""}else{processingfee=CSRC_processingfee}
      var CSRC_checkoutcleaningfee = CSRC_ctust_rs.getString("CC_CHECKOUT_CLEANING_FEE");
      if(CSRC_checkoutcleaningfee == null){CSRC_checkoutcleaningfee = "";var checkoutcleaningfee=""}else{checkoutcleaningfee=CSRC_checkoutcleaningfee}
      var CSRC_noticeperiod = CSRC_ctust_rs.getString("CED_NOTICE_PERIOD");
      if(CSRC_noticeperiod == null){CSRC_noticeperiod = "";var noticeperiod=""}else{noticeperiod=CSRC_noticeperiod}
      var CSRC_noticedate = CSRC_ctust_rs.getString("CED_NOTICE_START_DATE");
      if(CSRC_noticedate == null){CSRC_noticedate = ""}else{CSRC_noticedate =eilib.SqlDateFormat(CSRC_ctust_rs.getString("CED_NOTICE_START_DATE"));}
      var CSRC_nationality = CSRC_ctust_rs.getString("NC_DATA");
      var CSRC_dob= CSRC_ctust_rs.getString("CPD_DOB");
      if(CSRC_dob == null){CSRC_dob = ""}else{CSRC_dob =eilib.SqlDateFormat(CSRC_ctust_rs.getString("CPD_DOB"));}
      var CSRC_lease=CSRC_ctust_rs.getString("CED_LEASE_PERIOD");
      var CSRC_mobile = CSRC_ctust_rs.getString("CPD_MOBILE");
      if(CSRC_mobile == null){CSRC_mobile = "";var mobile=""}else{mobile=CSRC_mobile}
      var CSRC_mobile1 = CSRC_ctust_rs.getString("CPD_INTL_MOBILE");
      if(CSRC_mobile1 == null){CSRC_mobile1 = "";var mobile1=""}else{mobile1=CSRC_mobile1}
      var CSRC_officeno = CSRC_ctust_rs.getString("CCD_OFFICE_NO");
      if(CSRC_officeno == null){CSRC_officeno = "";var officeno=""}else{officeno=CSRC_officeno}
      var CSRC_email = CSRC_ctust_rs.getString("CPD_EMAIL");
      var CSRC_extension= CSRC_ctust_rs.getString("CED_EXTENSION");
      if(CSRC_extension == null){CSRC_extension = ""}
      var CSRC_preterminate = CSRC_ctust_rs.getString("CED_PRETERMINATE");
      if(CSRC_preterminate == null){CSRC_preterminate = ""}
      var CSRC_redver = CSRC_ctust_rs.getString("CED_REC_VER");         
      var CSRC_canceldate = CSRC_ctust_rs.getString("CED_CANCEL_DATE");
      if(CSRC_canceldate == null){CSRC_canceldate = ""}
      var CSRC_comments = CSRC_ctust_rs.getString("CPD_COMMENTS");
      if(CSRC_comments == null){var t_comments="";CSRC_comments = "";}else{t_comments=eilib.ConvertSpclCharString(CSRC_comments);}
      var CSRC_QUARTERS=CSRC_ctust_rs.getString("CED_QUARTERS");
      var CSRC_userstamp = CSRC_ctust_rs.getString("ULD_LOGINID");
      var CSRC_timestamp = CSRC_ctust_rs.getString("CLP_TIMESTAMP"); 
      var CSRC_roomtypeid=CSRC_ctust_rs.getString("UASD_ID");
      var CCRE_roomtypestmt=CSRC_conn.createStatement();
      var CCRE_roomtypequery="SELECT URTD.URTD_ROOM_TYPE FROM UNIT_ROOM_TYPE_DETAILS URTD, UNIT_ACCESS_STAMP_DETAILS UASD,CUSTOMER_ENTRY_DETAILS CED WHERE (CED.UASD_ID="+CSRC_roomtypeid+") AND(UASD.UASD_ID=CED.UASD_ID) AND(UASD.URTD_ID=URTD.URTD_ID) and CED.CED_REC_VER="+CSRC_customerrecver+"";
      var CCRE_roomtyperesult=CCRE_roomtypestmt.executeQuery(CCRE_roomtypequery);
      if(CCRE_roomtyperesult.next())
      {
        var CSRC_roomtype=CCRE_roomtyperesult.getString("URTD_ROOM_TYPE");
      }
      CCRE_roomtyperesult.close();
      CCRE_roomtypestmt.close();
      
      var CSRCstartdate= CSRC_ctust_rs.getString("CLP_STARTDATE");
      var CSRC_startdate = eilib.SqlDateFormat(CSRC_ctust_rs.getString("CLP_STARTDATE"));
      var CSRC_sstarttimedb=CSRC_ctust_rs.getString("CED_SD_STIME");
      var CSRC_sstarttimesplit=CSRC_sstarttimedb.split(":");
      var CSRC_sstarttime=CSRC_sstarttimesplit[0]+':'+CSRC_sstarttimesplit[1];
      var CSRC_sendtimedb=CSRC_ctust_rs.getString("CED_SD_ETIME");
      var CSRC_sendtimesplit=CSRC_sendtimedb.split(":");
      var CSRC_sendtime=CSRC_sendtimesplit[0]+':'+CSRC_sendtimesplit[1];
      var CSRCenddate=CSRC_ctust_rs.getString("CLP_ENDDATE");
      var CSRC_enddate = eilib.SqlDateFormat(CSRC_ctust_rs.getString("CLP_ENDDATE"));
      var CSRC_estarttimedb=CSRC_ctust_rs.getString("CED_ED_STIME");
      var CSRC_estarttimesplit=CSRC_estarttimedb.split(":");
      var CSRC_estarttime=CSRC_estarttimesplit[0]+':'+CSRC_estarttimesplit[1];
      var CSRC_eendtimedb=CSRC_ctust_rs.getString("CED_ED_ETIME");
      var CSRC_eendtimesplit=CSRC_eendtimedb.split(":");
      var CSRC_eendtime=CSRC_eendtimesplit[0]+':'+CSRC_eendtimesplit[1];
      var CSRC_pre_terminate=CSRC_ctust_rs.getString("CLP_PRETERMINATE_DATE");
      if(CSRC_pre_terminate=="" || CSRC_pre_terminate==null)
      {
        var CSRC_end_date=CSRC_enddate;
      }
      else
      {
        CSRC_end_date=eilib.SqlDateFormat(CSRC_ctust_rs.getString("CLP_PRETERMINATE_DATE"));
      }
      var CSRC_accesscardarray_length=[];
      if(CSRC_cardno!="")
      { CSRC_accesscardarray_length.push({card:CSRC_cardno});}
      var CSRC_accesscard={card:CSRC_cardno,cardstartdate:CSRC_startdate,cardenddate:CSRC_end_date};
      CSRC_accesscardarray.push(CSRC_accesscard);
      var CSRC_accesscardlength=CSRC_accesscardarray.length;
      count++;
    }
    var CSRC_unitstart_enddate=eilib.GetUnitSdEdate(CSRC_conn,CSRC_unit);
    var startdate=CSRC_unitstart_enddate.unitsdate;
    var enddate=CSRC_unitstart_enddate.unitedate;
    var CSRC_unitstart_enddate_array=[startdate,enddate];
    /*************CUSTOMER RECORD VERSION DETAILS*****************/
    var CSRC_recverstmt=CSRC_conn.createStatement();
    var CSRC_recverquery="CALL SP_CUSTOMER_SEARCH_PREVIOUS_RECVER_START_ENADATE("+CSRC_customerid+","+CSRC_customerrecver+","+CSRC_unit+",'"+UserStamp+"',@CUSTOMER_SEARCH_PREVIOUS_RECVER_TMPTBL)";
    CSRC_recverstmt.execute(CSRC_recverquery);
    var CSRC_Recverresult=CSRC_recverstmt.executeQuery("SELECT @CUSTOMER_SEARCH_PREVIOUS_RECVER_TMPTBL");
    while(CSRC_Recverresult.next())
    {
      var Recvertablename=CSRC_Recverresult.getString(1);
    }
    CSRC_Recverresult.close();
    var CSRC_recverresult=CSRC_recverstmt.executeQuery("SELECT *FROM "+Recvertablename+"");
    while(CSRC_recverresult.next())
    {
      var pre_startdate=CSRC_recverresult.getString(1);
      if(pre_startdate==null){pre_startdate="";}
      var pre_enddate=CSRC_recverresult.getString(2);
      if(pre_enddate==null){pre_enddate="";}
      var Maxrecver=CSRC_recverresult.getString(3);
      var REC_enddate=CSRC_recverresult.getString(4);
      var REC_startdate=CSRC_recverresult.getString(5);
    }
    CSRC_recverresult.close();
    var epppdatestmt=CSRC_conn.createStatement();
    var epppdatequery="SELECT CLP.CLP_ENDDATE,CLP.CLP_PRETERMINATE_DATE FROM CUSTOMER_LP_DETAILS CLP,CUSTOMER_ENTRY_DETAILS CED WHERE CLP.CUSTOMER_ID="+CSRC_customerid+" AND CED.CED_REC_VER= (SELECT MAX(CED_REC_VER)FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID="+CSRC_customerid+") AND CED.CED_REC_VER=CLP.CED_REC_VER AND CED.CED_CANCEL_DATE IS NULL AND CLP.CLP_GUEST_CARD IS NULL"
    var epppdateresult=epppdatestmt.executeQuery(epppdatequery);
    if(epppdateresult.next())
    {
      if(epppdateresult.getString(2)==null)
      {
        var epppmaxdate=eilib.SqlDateFormat(epppdateresult.getString(1));
      }
      else
      {
        epppmaxdate=eilib.SqlDateFormat(epppdateresult.getString(2));
      }
    }
    var unitexpcheck=CSRC_conn.createStatement();
    var unitexpcheckquery="SELECT * FROM EXPENSE_UNIT WHERE CUSTOMER_ID="+CSRC_customerid+" AND UNIT_ID=(SELECT UNIT_ID FROM UNIT WHERE UNIT_NO="+CSRC_unit+") LIMIT 1";
    var unitexpcheckresult=unitexpcheck.executeQuery(unitexpcheckquery);
    var unitexpflag=0;
    if(unitexpcheckresult.next())
    {
      unitexpflag=1;
    }
    unitexpcheckresult.close();
    unitexpcheck.close();
    var paymentcheck=CSRC_conn.createStatement();
    var paymentquery="SELECT * FROM PAYMENT_DETAILS WHERE CUSTOMER_ID="+CSRC_customerid+" AND UNIT_ID=(SELECT UNIT_ID FROM UNIT WHERE UNIT_NO="+CSRC_unit+") LIMIT 1";
    var paymentcheckresult=paymentcheck.executeQuery(paymentquery);
    var paymentexpflag=0;
    if(paymentcheckresult.next())
    {
      paymentexpflag=1;
    }
    paymentcheckresult.close();
    paymentcheck.close();
    if(unitexpflag==1 || paymentexpflag==1)
    {
      var expense=1;
    }
    else
    {
      expense=0;
    }
    CSRC_recverstmt.execute("DROP TABLE IF EXISTS "+Recvertablename+"");
    CSRC_recverstmt.close();   
    var temptabledropstmt=CSRC_conn.createStatement();
    temptabledropstmt.execute("DROP TABLE IF EXISTS "+CSRC_TEMPTTABLENAME+"");
    temptabledropstmt.close();
    var oldtimeanduserstamp=CSRC_userstamp+','+CSRC_timestamp;
    var userProperties_userandtimestamp = PropertiesService.getUserProperties();
    userProperties_userandtimestamp.setProperty("USERTIME", oldtimeanduserstamp);
    var customernewrecords=CSRC_firstname+','+CSRC_lastname;
    var userProperties_customer = PropertiesService.getUserProperties();
    userProperties_customer.setProperty("CUSTOMER", customernewrecords);
    var companynewrecords=CSRC_company+','+CSRC_compadd+','+CSRC_postalcode+','+officeno;
    var userProperties_company = PropertiesService.getUserProperties();
    userProperties_company.setProperty("COMPANY", companynewrecords);
    var entrynewrecords=CSRC_unit+'@'+CSRC_roomtype+'@'+CSRC_sstarttime+'@'+CSRC_sendtime+'@'+CSRC_estarttime+'@'+CSRC_eendtime+'@'+CSRC_lease+'@'+CSRC_QUARTERS+'@'+CSRC_noticeperiod+'@'+CSRC_noticedate+'@'+tickwaived+'@'+tickprorated;
    var userProperties_entry = PropertiesService.getUserProperties();
    userProperties_entry.setProperty("ENTRY", entrynewrecords);
    var update_nation=eilib.ConvertSpclCharString(CSRC_nationality)
    var personalnewrecords=update_nation+'^'+mobile+'^'+mobile1+'^'+CSRC_email+'^'+passportno+'^'+CSRC_passportdate+'^'+CSRC_dob+'^'+CSRC_epno+'^'+CSRC_epdate+'^'+t_comments;
    var userProperties_personal = PropertiesService.getUserProperties();
    userProperties_personal.setProperty("PERSONAL", personalnewrecords);
    var paymentnewrecords=CSRC_rental+','+CSRC_deposit+','+processingfee+','+airconfixedfee+','+electricity+','+drycleanfee+','+airconquartelyfee+','+checkoutcleaningfee;
    var userProperties_payment = PropertiesService.getUserProperties();
    userProperties_payment.setProperty("PAYMENT", paymentnewrecords);
    var values_array={'waived_flag':waivedflag,'prorated_flag':proratedflag,'start_date':CSRCstartdate,'end_date':CSRCenddate,'startdatestart':CSRC_sstarttime,'startdateend':CSRC_sendtime,'enddatestart':CSRC_estarttime,'enddateend':CSRC_eendtime,'customerid':CSRC_customerid,'recver':CSRC_redver,'guestcard':CSRC_guestcard, 'Canceldate':CSRC_canceldate,'airconfixedfee':CSRC_airconfixedfee,'airconquartelyfee':CSRC_airconquartelyfee,'preterminatedate':CSRC_pre_terminate,'redver':CSRC_redver,'customerid':CSRC_customerid,'unitno': CSRC_unitno,'firstname':CSRC_firstname,'lastname':CSRC_lastname,'email':CSRC_email,'mobile1':CSRC_mobile,'mobile2':CSRC_mobile1,'officeno':CSRC_officeno,'dob':CSRC_dob,'passportno':CSRC_passportno,'passportdate':CSRC_passportdate,'epno':CSRC_epno,'epdate':CSRC_epdate,'extension':CSRC_extension,'roomtype':CSRC_roomtype,'cardno':CSRC_cardno,'startdate':CSRC_startdate,'enddate':CSRC_end_date,'lease':CSRC_lease,'QUARTERS':CSRC_QUARTERS,'noticeperiod':CSRC_noticeperiod,'noticedate':CSRC_noticedate,'electricitycap':CSRC_electricitycap,'drycleanfee':CSRC_drycleanfee,'checkoutcleaningfee':CSRC_checkoutcleaningfee,'deposit':CSRC_deposit,'rental':CSRC_rental,'processingfee':CSRC_processingfee,'comments':CSRC_comments,'company':CSRC_company,'companyaddress':CSRC_compadd,'postalcode': CSRC_postalcode,'nationality':CSRC_nationality,'userstamp': CSRC_userstamp,'timestamp':CSRC_timestamp,'pre_terminate':CSRC_preterminate}
    var return_array=[values_array,roomtypearray,CSRC_accesscardarray,CSRC_unitstart_enddate_array,CSRC_accesscardarray_length,CSRC_accesscardlength,pre_enddate,pre_startdate,REC_enddate,REC_startdate,Maxrecver,epppmaxdate,expense]
    return return_array;
    CSRC_conn.close();
  }
}
catch(err)
{
}
function CSRC_customer_update_getvalues(CSRC_updation)
{
  try
  {
    var CSRC_conn =eilib.db_GetConnection();
    CSRC_expconn=CSRC_conn;
    CSRC_conn.setAutoCommit(false);
    var CSRC_customerid=CSRC_updation.CSRC_tb_custid;
    var CSRC_cutomerrecver=CSRC_updation.CSRC_tb_recver;
    var CSRC_unit=CSRC_updation.CCRE_tempunittextbox;
    var CSRC_firstname=CSRC_updation.CSRC_tb_firstname;
    var CSRC_lastname=CSRC_updation.CSRC_tb_lastname;
    var CSRC_name=CSRC_firstname+' '+CSRC_lastname;
    var CSRC_customermailid=CSRC_updation.CSRC_tb_custmailid;
    var CSRC_dateofbirth=CSRC_updation.CSRC_db_BirthDate;
    if(CSRC_dateofbirth=="")
    {    CSRC_dateofbirth=null;var dob="";  }else{dob=CSRC_dateofbirth;CSRC_dateofbirth="'"+eilib.SqlDateFormat(CSRC_dateofbirth)+"'";}
    var CSRC_nationality=CSRC_updation.CSRC_lb_nationalityselect;
    var update_nation=eilib.ConvertSpclCharString(CSRC_updation.CSRC_lb_nationalityselect);
    var CSRC_passportno=CSRC_updation.CSRC_tb_passportno;
    if(CSRC_passportno=="")
    {  CSRC_passportno=null;var passportno="";}else{passportno=CSRC_passportno;CSRC_passportno="'"+CSRC_passportno+"'";}
    var CSRC_passportdate=CSRC_updation.CSRC_db_passportdate;
    if(CSRC_passportdate=="")
    {    CSRC_passportdate=null; var passportdate="";  }else{passportdate=CSRC_passportdate;CSRC_passportdate="'"+eilib.SqlDateFormat(CSRC_passportdate)+"'";}
    var CSRC_companyname=CSRC_updation.CSRC_tb_companyname;
    if(CSRC_companyname=="")
    {    CSRC_companyname=null;var CSRC_compname="";  }else{CSRC_compname=CSRC_companyname;CSRC_companyname="'"+CSRC_companyname+"'";}
    var CSRC_companyaddress=CSRC_updation.CSRC_tb_companyaddress;
    if(CSRC_companyaddress=="")
    {    CSRC_companyaddress=null;var companyadd="";  }else{companyadd=CSRC_companyaddress;CSRC_companyaddress="'"+CSRC_companyaddress+"'";}
    var CSRC_companypostalcode=CSRC_updation.CSRC_tb_companypostalcode;
    if(CSRC_companypostalcode=="")
    {    CSRC_companypostalcode=null;var postalcode="";  }else{postalcode=CSRC_companypostalcode;CSRC_companypostalcode="'"+CSRC_companypostalcode+"'";}
    var CSRC_mobile=CSRC_updation.CSRC_tb_mobile;
    if(CSRC_mobile=="")
    {    CSRC_mobile=null; var mobile="";  }else{mobile=CSRC_mobile;CSRC_mobile="'"+CSRC_mobile+"'";}
    var CSRC_intmobile=CSRC_updation.CSRC_tb_intmobile;
    if(CSRC_intmobile=="")
    {    CSRC_intmobile=null; var intlmobile="" }else{intlmobile=CSRC_intmobile;CSRC_intmobile="'"+CSRC_intmobile+"'";}
    var CSRC_office=CSRC_updation.CSRC_tb_office;
    if(CSRC_office=="")
    {    CSRC_office=null; var office="" }else{office=CSRC_office;CSRC_office="'"+CSRC_office+"'";}
    var CSRC_epno=CSRC_updation.CSRC_tb_epno;
    if(CSRC_epno=="")
    {    CSRC_epno=null;var epno=""; }else{epno=CSRC_epno;CSRC_epno="'"+CSRC_epno+"'";}
    var CSRC_epdate=CSRC_updation.CSRC_db_epdate;
    if(CSRC_epdate=="")
    {    CSRC_epdate=null;var epdate=""}else{epdate=CSRC_epdate;CSRC_epdate="'"+eilib.SqlDateFormat(CSRC_epdate)+"'";}
    var CSRC_roomtype=CSRC_updation.CSRC_lb_roomselect;
    var CSRC_startdate=eilib.SqlDateFormat(CSRC_updation.CSRC_db_startdate);
    var CSRC_enddate=eilib.SqlDateFormat(CSRC_updation.CSRC_db_enddate);
    var CSRC_noticeno=CSRC_updation.CSRC_tb_noticeno;
    if(CSRC_noticeno=="")
    {    CSRC_noticeno=null;var noticeno="";}else{noticeno=CSRC_noticeno;CSRC_noticeno="'"+CSRC_noticeno+"'"}
    var CSRC_noticedate=CSRC_updation.temp_CSRC_db_noticedate;
    if(CSRC_noticedate=="" || CSRC_noticedate==undefined || CSRC_noticedate==null)
    {    CSRC_noticedate=null;var noticedate="";  }else{noticedate=CSRC_noticedate;CSRC_noticedate="'"+eilib.SqlDateFormat(CSRC_noticedate)+"'";}
    var CSRC_quarterlyfee=CSRC_updation.CSRC_tb_quarterlyfee;
    if(CSRC_quarterlyfee=="")
    { CSRC_quarterlyfee=null;var CSRCquarterlyfee="" }else{CSRCquarterlyfee=CSRC_quarterlyfee}
    var CSRC_airconfixed=CSRC_updation.CSRC_tb_aircon_fixed;
    if(CSRC_airconfixed=="")
    {  CSRC_airconfixed=null;var CSRCairconfixed="";}else{CSRCairconfixed=CSRC_airconfixed}
    var CSRC_electricity=CSRC_updation.CSRC_tb_electricity;
    if(CSRC_electricity=="")
    { CSRC_electricity=null;var CSRCelectricity=""}else{CSRCelectricity=CSRC_electricity}
    var CSRC_drycleaning=CSRC_updation.CSRC_tb_drycleaning;
    if(CSRC_drycleaning=="")
    {  CSRC_drycleaning=null;var CSRCdrycleaning="";}else{CSRCdrycleaning=CSRC_drycleaning}
    var CSRC_cleaning=CSRC_updation.CSRC_tb_cleaning;
    if(CSRC_cleaning=="")
    {  CSRC_cleaning=null;var CSRCcleaning=""}else{CSRCcleaning=CSRC_cleaning}
    var CSRC_deposit=CSRC_updation.CSRC_tb_deposit;
    if(CSRC_deposit=="")
    {  CSRC_deposit=null;var CSRCdeposit=""}else{CSRCdeposit=CSRC_deposit}
    var CSRC_rent=CSRC_updation.CSRC_tb_rent;
    var CSRC_process=CSRC_updation.CSRC_tb_process;
    if(CSRC_process=="")
    {  CSRC_process=null;var CSRCprocess=""}else{CSRCprocess=CSRC_process}
    var CSRC_ccoption=CSRC_updation.CSRC_lb_ccoptionselect;
    var CSRC_mailid=CSRC_updation.CSRC_lb_mailselect;
    var CSRC_comments=CSRC_updation.CSRC_ta_comments;
    var tick_comments=CSRC_updation.CSRC_ta_comments;
    if(CSRC_comments!="")
    {
      CSRC_comments=eilib.ConvertSpclCharString(CSRC_comments);
      tick_comments=CSRC_comments;
    }
    var CSRC_userstamp=Session.getActiveUser();
    var timestmt=CSRC_conn.createStatement();
    var timequery="SELECT CTPA.CTP_DATA AS CED_SD_STIME,CTPB.CTP_DATA AS CED_SD_ETIME,CTPC.CTP_DATA AS CED_ED_STIME, CTPD.CTP_DATA AS CED_ED_ETIME FROM  CUSTOMER_ENTRY_DETAILS CED LEFT JOIN CUSTOMER_TIME_PROFILE CTPA ON CED.CED_SD_STIME = CTPA.CTP_ID LEFT JOIN CUSTOMER_TIME_PROFILE CTPB ON CED.CED_SD_ETIME = CTPB.CTP_ID LEFT JOIN CUSTOMER_TIME_PROFILE CTPC ON CED.CED_ED_STIME = CTPC.CTP_ID LEFT JOIN CUSTOMER_TIME_PROFILE CTPD ON CED.CED_ED_ETIME = CTPD.CTP_ID,CUSTOMER_LP_DETAILS CTD WHERE CED.CUSTOMER_ID='"+CSRC_customerid+"' AND CED.CUSTOMER_ID=CTD.CUSTOMER_ID AND CED.CED_REC_VER='"+CSRC_cutomerrecver+"' AND CED.CED_REC_VER=CTD.CED_REC_VER";
    var timeresult=timestmt.executeQuery(timequery);
    if(timeresult.next())
    {
      var CSRC_DB_startdatestarttime=(timeresult.getString(1)).split(':');
      var CSRC_DB_startdate_starttime=CSRC_DB_startdatestarttime[0]+':'+CSRC_DB_startdatestarttime[1];
      var CSRC_DB_startdateendtime=(timeresult.getString(2)).split(':');
      var CSRC_DB_startdate_endtime=CSRC_DB_startdateendtime[0]+':'+CSRC_DB_startdateendtime[1];
      var CSRC_DB_enddatestarttime=(timeresult.getString(3)).split(':');
      var CSRC_DB_enddate_starttime=CSRC_DB_enddatestarttime[0]+':'+CSRC_DB_enddatestarttime[1];
      var CSRC_DB_enddateendtime=(timeresult.getString(4)).split(':'); 
      var CSRC_DB_enddate_endtime=CSRC_DB_enddateendtime[0]+':'+CSRC_DB_enddateendtime[1];
    }
    if(CSRC_updation.CSRC_lb_startselect==undefined && CSRC_updation.CSRC_lb_endselect!=undefined)
    {
      var CSRC_startdate_starttime=CSRC_DB_startdate_starttime; 
      var CSRC_startdate_endtime=CSRC_DB_startdate_endtime; 
      var CSRC_enddate_starttime=CSRC_updation.CSRC_lb_endselect;
      var CSRC_enddate_endtime=CSRC_updation.CSRC_lb_endselect1;
    }
    if(CSRC_updation.CSRC_lb_startselect!=undefined && CSRC_updation.CSRC_lb_endselect==undefined)
    {
      var CSRC_startdate_starttime=CSRC_updation.CSRC_lb_startselect;  
      var CSRC_startdate_endtime=CSRC_updation.CSRC_lb_startselect1; 
      var CSRC_enddate_starttime=CSRC_DB_enddate_starttime;
      var CSRC_enddate_endtime=CSRC_DB_enddate_endtime;
    }
    if(CSRC_updation.CSRC_lb_startselect==undefined && CSRC_updation.CSRC_lb_endselect==undefined)
    {
      var CSRC_startdate_starttime=CSRC_DB_startdate_starttime; 
      var CSRC_startdate_endtime=CSRC_DB_startdate_endtime;
      var CSRC_enddate_starttime=CSRC_DB_enddate_starttime;
      var CSRC_enddate_endtime=CSRC_DB_enddate_endtime;
    }
    if(CSRC_updation.CSRC_lb_startselect!=undefined && CSRC_updation.CSRC_lb_endselect!=undefined)
    {
      CSRC_startdate_starttime=CSRC_updation.CSRC_lb_startselect;    
      CSRC_startdate_endtime=CSRC_updation.CSRC_lb_startselect1;
      CSRC_enddate_starttime=CSRC_updation.CSRC_lb_endselect
      CSRC_enddate_endtime=CSRC_updation.CSRC_lb_endselect1;
    }
    var CSRC_check='X';
    var CSRC_process_check=CSRC_updation.checkbox1;
    if(CSRC_process_check==undefined)
    {
      var waived="";
      CSRC_process_check='null';
      var tickprocess=null;
    }
    else
    {
      waived=CSRC_check;
      tickprocess=CSRC_check;
      CSRC_process_check="'"+CSRC_check+"'";
    }
    var CSRC_prorated=CSRC_updation.tempcheckbox2;
    var CSRC_PRORATED=CSRC_updation.checkbox2;
    if((CSRC_prorated==undefined)&&(CSRC_PRORATED==undefined))
    {
      var rentcheck='false';
      CSRC_prorated='null';
      var tickprorated=null;
    }
    else
    {
      rentcheck='true';
      tickprorated=CSRC_check;
      CSRC_prorated="'"+CSRC_check+"'";
    }
    var CSRC_tempstartdate=CSRC_updation.CSRC_db_tempstartdate;
    var CSRC_tempenddate=CSRC_updation.CSRC_db_tempenddate;
    var CSRC_sdate=CSRC_tempstartdate.split('-');
    var CSRC_edate=CSRC_tempenddate.split('-');
    var startdate_CSRC=new Date(CSRC_sdate[2],CSRC_sdate[1]-1,CSRC_sdate[0]);
    var enddate_CSRC=new Date(CSRC_edate[2],CSRC_edate[1]-1,CSRC_edate[0]);
    if(startdate_CSRC<enddate_CSRC)
    {
      var CSRC_quators  = eilib.quarterCalc(new Date(CSRC_sdate[2],CSRC_sdate[1]-1,CSRC_sdate[0]),new Date(CSRC_edate[2],CSRC_edate[1]-1,CSRC_edate[0])); 
      var CSRC_Leaseperiod  = eilib.leasePeriodCalc(new Date(CSRC_sdate[2],CSRC_sdate[1]-1,CSRC_sdate[0]),new Date(CSRC_edate[2],CSRC_edate[1]-1,CSRC_edate[0]));
      var T_CSRC_Leaseperiod=CSRC_Leaseperiod;
      CSRC_Leaseperiod="'"+CSRC_Leaseperiod+"'";
    }
    else
    {
      CSRC_quators=null;
      CSRC_Leaseperiod=null;
      T_CSRC_Leaseperiod='';
    }
    var CSRC_Customerstartdate=[];
    var CSRC_Customerenddate=[];
    var cardstartandendatestmt=CSRC_conn.createStatement();
    var cardstartandendatequery="SELECT CLP_STARTDATE,CLP_ENDDATE,CLP_PRETERMINATE_DATE FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID="+CSRC_customerid+" AND CED_REC_VER="+CSRC_cutomerrecver+" ORDER BY CLP_ENDDATE DESC";
    var cardstartandendateresult=cardstartandendatestmt.executeQuery(cardstartandendatequery);
    while(cardstartandendateresult.next())
    {
      CSRC_Customerstartdate.push(eilib.SqlDateFormat(cardstartandendateresult.getString(1)));
      var pretermdate=cardstartandendateresult.getString(3);
      if(pretermdate==null)
      {
        CSRC_Customerenddate.push(eilib.SqlDateFormat(cardstartandendateresult.getString(2)));
      }
      else
      {
        CSRC_Customerenddate.push(eilib.SqlDateFormat(cardstartandendateresult.getString(3)));
      }
    }
    cardstartandendateresult.close();
    cardstartandendatestmt.close();
    var CSRC_cardstartdates=CSRC_updation.CSRC_db_cardstartdate;
    var CSRC_cardenddates=CSRC_updation.CSRC_db_cardenddate;
    var CSRC_tempcardstartdates=CSRC_updation.CSRC_db_tempcardstartdate;
    var CSRC_tempcardenddates=CSRC_updation.CSRC_db_tempcardenddate;
    var tempcardsdate=CSRC_updation.CSRC_db_tempstartdate;
    var tempcardedate=CSRC_updation.CSRC_db_tempenddate;
    var CSRC_cardno=CSRC_updation.CSRC_db_cardno;
    if(CSRC_cardno!=undefined)
    {
      var accesscardstartenddate;
      var accesscardtilldate;
      var oldaccesscardstartenddate;
      var cardlength=CSRC_Customerstartdate.length;
      if(cardlength!=1)
      {
        for(var i=0;i<cardlength;i++)
        {
          if(i==0)
          {
            var cardno=CSRC_cardno[i];
            accesscardstartenddate=CSRC_cardno[i]+','+eilib.SqlDateFormat(CSRC_tempcardstartdates[i])+','+eilib.SqlDateFormat(CSRC_tempcardenddates[i]);
            accesscardtilldate=CSRC_cardno[i]+','+eilib.SqlDateFormat(CSRC_tempcardstartdates[i]);
            oldaccesscardstartenddate=CSRC_cardno[i]+','+eilib.SqlDateFormat(CSRC_Customerstartdate[i])+','+eilib.SqlDateFormat(CSRC_Customerenddate[i]);
          }
          else
          {
            accesscardstartenddate=accesscardstartenddate+','+CSRC_cardno[i]+','+eilib.SqlDateFormat(CSRC_tempcardstartdates[i])+','+eilib.SqlDateFormat(CSRC_tempcardenddates[i]);
            accesscardtilldate=accesscardtilldate+','+CSRC_cardno[i]+','+eilib.SqlDateFormat(CSRC_tempcardstartdates[i]);
            oldaccesscardstartenddate=oldaccesscardstartenddate+','+CSRC_cardno[i]+','+eilib.SqlDateFormat(CSRC_Customerstartdate[i])+','+eilib.SqlDateFormat(CSRC_Customerenddate[i]);
          }
        }
      }
      else
      {
        cardno=CSRC_cardno;
        oldaccesscardstartenddate=CSRC_cardno+','+eilib.SqlDateFormat(CSRC_Customerstartdate[0])+','+eilib.SqlDateFormat(CSRC_Customerenddate[0]);
        accesscardstartenddate=CSRC_cardno+','+eilib.SqlDateFormat(CSRC_tempcardstartdates)+','+eilib.SqlDateFormat(CSRC_tempcardenddates);
        accesscardtilldate=CSRC_cardno+','+eilib.SqlDateFormat(CSRC_tempcardstartdates);
      }
      var newaccesscardstartenddate=accesscardstartenddate;
      accesscardstartenddate="'"+accesscardstartenddate+"'";
      accesscardtilldate="'"+accesscardtilldate+"'";
    }
    if(CSRC_cardno==undefined)
    {
      oldaccesscardstartenddate=" ,"+eilib.SqlDateFormat(CSRC_Customerstartdate[0])+','+eilib.SqlDateFormat(CSRC_Customerenddate[0]);
      newaccesscardstartenddate=" ,"+eilib.SqlDateFormat(tempcardsdate)+','+eilib.SqlDateFormat(tempcardedate);
      var accesscardstartenddate=" ,"+eilib.SqlDateFormat(CSRC_tempstartdate)+','+eilib.SqlDateFormat(CSRC_tempenddate);
      accesscardstartenddate="'"+accesscardstartenddate+"'";
      var accesscardtilldate=null;
      CSRC_cardno="";
    }
    var nulldatecheck=(newaccesscardstartenddate.toString()).search('null');
    if(nulldatecheck!=-1)
    {
      newaccesscardstartenddate=oldaccesscardstartenddate;
    }
    /**************TICKLER UPDATION RECORDS**********************/
    var userProperties_userandtimestamp = PropertiesService.getUserProperties();
    var userandtimestamp=userProperties_userandtimestamp.getProperty("USERTIME");
    var usertimesplit=userandtimestamp.split(',')
    var olduserstamp=usertimesplit[0];
    var oldtimestamp=usertimesplit[1];
    var userPropertiescustomer = PropertiesService.getUserProperties();
    var customeroldrecords = userPropertiescustomer.getProperty('CUSTOMER');
    var userPropertiescompany = PropertiesService.getUserProperties();
    var companyoldrecords = userPropertiescompany.getProperty('COMPANY');
    var userPropertiespersonal = PropertiesService.getUserProperties();
    var personaloldrecords = userPropertiespersonal.getProperty('PERSONAL');
    var userPropertiesentry = PropertiesService.getUserProperties();
    var entryoldrecords = userPropertiesentry.getProperty('ENTRY');
    var userPropertiespayment = PropertiesService.getUserProperties();
    var paymentoldrecords = userPropertiespayment.getProperty('PAYMENT');
    var customernewrecords=CSRC_firstname+','+CSRC_lastname;
    var companynewrecords=CSRC_compname+','+companyadd+','+postalcode+','+office;
    var entrynewrecords=CSRC_unit+'@'+CSRC_roomtype+'@'+CSRC_startdate_starttime+'@'+CSRC_startdate_endtime+'@'+CSRC_enddate_starttime+'@'+CSRC_enddate_endtime+'@'+T_CSRC_Leaseperiod+'@'+CSRC_quators+'@'+noticeno+'@'+noticedate+'@'+tickprocess+'@'+tickprorated;
    var personalnewrecords=update_nation+'^'+mobile+'^'+intlmobile+'^'+CSRC_customermailid+'^'+passportno+'^'+passportdate+'^'+dob+'^'+epno+'^'+epdate+'^'+tick_comments;
    var paymentnewrecords=CSRC_rent+','+CSRCdeposit+','+CSRCprocess+','+CSRCairconfixed+','+CSRCelectricity+','+CSRCdrycleaning+','+CSRCquarterlyfee+','+CSRCcleaning;
    var terminationnewrecords=CSRC_startdate+','+CSRC_enddate;
    var calenderIDcode=eilib.CUST_getCalenderId(CSRC_conn);
    CSRCcalendarname=calenderIDcode;
    CSRCfirstname=CSRC_firstname;
    CSRClastname=CSRC_lastname;
    CSRCmobile=CSRC_mobile;
    CSRCintmobile=CSRC_intmobile;
    CSRCoffice=CSRC_office;
    CSRCmailid=CSRC_customermailid;
    CSRCUnit=CSRC_unit;
    CSRCRoomtype=CSRC_roomtype;
    var deleteevents=CAL_DEL_CREATE(CSRC_conn,CSRC_customerid,'DELETE');
    beforedelcalevents=deleteevents[0];
    beforecreatecalevents=deleteevents[1];
    var CSRC_customerstmt=CSRC_conn.createStatement();
    var CSRC_customer_updatequery="CALL SP_CUSTOMER_SEARCH_UPDATE("+CSRC_customerid+",'"+CSRC_firstname+"','"+CSRC_lastname+"',"+CSRC_companyname+","+CSRC_companyaddress+","+CSRC_companypostalcode+","+CSRC_office+","+CSRC_unit+","+CSRC_cutomerrecver+",'"+CSRC_roomtype+"','"+CSRC_startdate_starttime+"','"+CSRC_startdate_endtime+"','"+CSRC_enddate_starttime+"','"+CSRC_enddate_endtime+"',"+CSRC_Leaseperiod+","+CSRC_quators+","+CSRC_process_check+","+CSRC_prorated+","+CSRC_noticeno+","+CSRC_noticedate+","+CSRC_rent+","+CSRC_deposit+","+CSRC_process+","+CSRC_airconfixed+","+CSRC_quarterlyfee+","+CSRC_electricity+","+CSRC_cleaning+","+CSRC_drycleaning+",'"+UserStamp+"','"+eilib.SqlDateFormat(CSRC_tempstartdate)+"','"+eilib.SqlDateFormat(CSRC_tempenddate)+"','"+update_nation+"',"+CSRC_mobile+","+CSRC_intmobile+",'"+CSRC_customermailid+"',"+CSRC_passportno+","+CSRC_passportdate+","+CSRC_dateofbirth+","+CSRC_epno+","+CSRC_epdate+",'"+CSRC_comments+"',"+accesscardtilldate+","+accesscardstartenddate+",@SUCCESS_FLAG)";
    CSRC_customerstmt.execute(CSRC_customer_updatequery);
    CSRC_customerstmt.execute("CALL SP_CUSTOMER_TICKLER_UPDATE("+CSRC_customerid+","+CSRC_cutomerrecver+",'"+customeroldrecords+"','"+customernewrecords+"','"+companyoldrecords+"','"+companynewrecords+"','"+personaloldrecords+"','"+personalnewrecords+"','"+entryoldrecords+"','"+entrynewrecords+"','"+paymentoldrecords+"','"+paymentnewrecords+"','"+oldaccesscardstartenddate+"','"+newaccesscardstartenddate+"','"+UserStamp+"','"+olduserstamp+"','"+oldtimestamp+"')");
    var customerupdate_getresult= CSRC_customerstmt.executeQuery("SELECT @SUCCESS_FLAG");
    while(customerupdate_getresult.next())
    {
      var EMP_ENTRY_getresultdate=customerupdate_getresult.getString("@SUCCESS_FLAG");
    }
    CSRC_customerstmt.close();
    if(EMP_ENTRY_getresultdate==1)
    {
      CSRCcustomer_id=CSRC_customerid;
      CSRCcedrecver=CSRC_cutomerrecver;
      var CSRC_customername=CSRC_firstname+' '+CSRC_lastname;
      var createevents=CAL_DEL_CREATE(CSRC_conn,CSRC_customerid,'CREATE');
      afterdelcalevents=createevents[0];
      aftercreatecalevents=createevents[1];
      CSRCcheckstatusflag==1
      if(CSRC_ccoption==4 || CSRC_ccoption==5 || CSRC_ccoption==6)
      {
        var cust_config_array=eilib.CUST_invoice_contractreplacetext(CSRC_conn);
        var CSRC_invoiceid=cust_config_array[9];
        var CSRC_contractid=cust_config_array[10];
        var CSRC_invoicesno=cust_config_array[0];
        var CSRC_invoicedate=cust_config_array[1];
        var CSRC_docowner=eilib.CUST_documentowner(CSRC_conn);
        var Folderid=eilib.CUST_TargetFolderId(CSRC_conn);
        var invoicecontractarray=eilib.CUST_emailsubandmessages(CSRC_conn);
        var emailsub=invoicecontractarray[0].subject;
        var emailmessage=invoicecontractarray[0].message;
        if(cardno=="" || cardno==undefined)
        {
          cardno=" ";
        }
        if(CSRC_ccoption==4)
        {
          eilib.CUST_invoicemail(CSRC_conn,CSRC_unit,CSRC_customername,CSRC_compname,CSRC_invoiceid,CSRC_invoicesno,CSRC_invoicedate,CSRC_rent,CSRC_process,CSRC_deposit,eilib.SqlDateFormat(CSRC_tempstartdate),eilib.SqlDateFormat(CSRC_tempenddate),CSRC_roomtype,CSRC_Leaseperiod,CSRC_mailid,Folderid,rentcheck,CSRC_docowner,'CREATION',waived,CSRC_customerid)
        }
        if(CSRC_ccoption==5)
        {
          eilib.CUST_contractmail(CSRC_conn,CSRC_unit,eilib.SqlDateFormat(CSRC_tempstartdate),eilib.SqlDateFormat(CSRC_tempenddate),CSRC_compname,CSRC_customername,noticeno,passportno,passportdate,epno,epdate,noticedate,CSRC_Leaseperiod,cardno,CSRC_rent,CSRC_quarterlyfee,CSRC_airconfixed,CSRC_electricity,CSRC_drycleaning,CSRC_cleaning,CSRC_process,CSRC_deposit,waived,CSRC_roomtype,rentcheck,CSRC_mailid,'CREATION',Folderid,CSRC_docowner)
        }
        if(CSRC_ccoption==6)
        {
          eilib.CUST_invoicecontractmail(CSRC_conn,CSRC_unit,CSRC_invoiceid,eilib.SqlDateFormat(CSRC_tempstartdate),eilib.SqlDateFormat(CSRC_tempenddate),CSRC_compname,CSRC_customername,CSRC_invoicesno,CSRC_invoicedate,noticeno,passportno,passportdate,epno,epdate,noticedate,CSRC_Leaseperiod,cardno,CSRC_rent,CSRC_quarterlyfee,CSRC_airconfixed,CSRC_electricity,CSRC_drycleaning,CSRC_cleaning,CSRC_process,CSRC_deposit,waived,CSRC_roomtype,Folderid,rentcheck,CSRC_docowner,CSRC_mailid,'CREATION',CSRC_customerid)
        }
      }
      CUST_customercalenderdeletion(CSRC_customerid,calenderIDcode,beforedelcalevents);
      CUST_customercalendercreation(CSRC_conn,CSRC_customerid, calenderIDcode,CSRC_firstname, CSRC_lastname, mobile, intlmobile,office, CSRC_customermailid, CSRC_unit,CSRC_roomtype,aftercreatecalevents)
    }
    CSRC_conn.commit();
    return EMP_ENTRY_getresultdate;
    CSRC_conn.close();
  }
  catch(err)
  {
    Logger.log("SCRIPT EXCEPTION:"+err)
    CSRC_expconn.rollback();
    if(afterdelcalevents!=undefined && beforecreatecalevents!=undefined)
    {
      CUST_customercalenderdeletion(CSRC_customerid,calenderIDcode,afterdelcalevents);
      CUST_customercalendercreation(CSRC_expconn,CSRC_customerid, calenderIDcode,CSRC_firstname, CSRC_lastname, mobile, intlmobile,office, CSRC_customermailid, CSRC_unit,CSRC_roomtype,beforecreatecalevents)
    }
    var invoice=eilib.invoiceid();
    var contract=eilib.contractid();
    if(invoice!=undefined)
    {
      eilib.CUST_UNSHARE_FILE(invoice);
    }
    if(contract!=undefined)
    {
      eilib.CUST_UNSHARE_FILE(contract);
    }
    return (Logger.getLog());
  }
}

function CSRC_customerrecord_delete(CSRC_customerid)
{
  try
  {
    var CSRC_conn =eilib.db_GetConnection();
    CSRC_expconn=CSRC_conn;
    var calender_deletestmt=CSRC_conn.createStatement();
    var calender_deletequery="SELECT CTD.CLP_STARTDATE,CTD.CLP_ENDDATE,CTPA.CTP_DATA AS CED_SD_STIME, CTPB.CTP_DATA AS CED_SD_ETIME,CTPC.CTP_DATA AS CED_ED_STIME, CTPD.CTP_DATA AS CED_ED_ETIME FROM  CUSTOMER_ENTRY_DETAILS CED LEFT JOIN CUSTOMER_TIME_PROFILE CTPA ON CED.CED_SD_STIME = CTPA.CTP_ID LEFT JOIN CUSTOMER_TIME_PROFILE CTPB ON CED.CED_SD_ETIME = CTPB.CTP_ID LEFT JOIN CUSTOMER_TIME_PROFILE CTPC ON CED.CED_ED_STIME = CTPC.CTP_ID LEFT JOIN CUSTOMER_TIME_PROFILE CTPD ON CED.CED_ED_ETIME = CTPD.CTP_ID,CUSTOMER_LP_DETAILS CTD WHERE CED.CUSTOMER_ID=CTD.CUSTOMER_ID AND CED.CUSTOMER_ID="+CSRC_customerid+""; 
    var calender_deleteresult=calender_deletestmt.executeQuery(calender_deletequery);
    if(calender_deleteresult.next())
    {
      var CSRC_oldstartdate=calender_deleteresult.getString("CLP_STARTDATE");
      var CSRC_oldsstarttime=calender_deleteresult.getString("CED_SD_STIME")
      var CSRC_oldsendtime=calender_deleteresult.getString("CED_SD_ETIME");
      var CSRC_oldenddate=calender_deleteresult.getString("CLP_ENDDATE");
      var CSRC_oldestarttime=calender_deleteresult.getString("CED_ED_STIME")
      var CSRC_oldeendtime=calender_deleteresult.getString("CED_ED_ETIME")
      }
    calender_deleteresult.close();
    calender_deletestmt.close();
    var customersearch_tick_stmt=CSRC_conn.createStatement();
    var customersearch_tick_query="CALL SP_CUSTOMER_SEARCH_TICKLER_DELETION("+CSRC_customerid+",'"+UserStamp+"',@CUSTOMER_SEARCH_DELETION,@FLAG)";
    customersearch_tick_stmt.execute(customersearch_tick_query);
    var customerdelete_getresult= customersearch_tick_stmt.executeQuery("SELECT @CUSTOMER_SEARCH_DELETION,@FLAG");
    while(customerdelete_getresult.next())
    {
      var EMP_ENTRY_getresultdate=customerdelete_getresult.getString("@FLAG");
      CSRC_TEMPtable=customerdelete_getresult.getString("@CUSTOMER_SEARCH_DELETION");
    }
    var customerdeletion_flag=EMP_ENTRY_getresultdate;
    customersearch_tick_stmt.close();
    if(customerdeletion_flag==1)
    {
      var calenderIDcode=eilib.CUST_getCalenderId(CSRC_conn);
      eilib.CUST_customercalenderdeletion(CSRC_customerid, calenderIDcode, CSRC_oldstartdate, CSRC_oldsstarttime, CSRC_oldsendtime, CSRC_oldenddate, CSRC_oldestarttime, CSRC_oldeendtime,' ')
    }
    CSRC_conn.commit();
    if(CSRC_TEMPtable!=null || CSRC_TEMPtable!=undefined)
    {
      var rollbackstmt=CSRC_conn.createStatement();
      rollbackstmt.execute("DROP TABLE IF EXISTS "+CSRC_TEMPtable+"");
      rollbackstmt.close();
    }
    CSRC_conn.close();
    return customerdeletion_flag;
    
  }
  catch(err)
  {
    Logger.log("SCRIPT EXCEPTION:"+err)
    CSRC_expconn.rollback();
    if(CSRC_TEMPtable!=null || CSRC_TEMPtable!=undefined)
    {
      var rollbackstmt=CSRC_expconn.createStatement();
      rollbackstmt.execute("DROP TABLE IF EXISTS "+CSRC_TEMPtable+"");
      rollbackstmt.close();
    }
    return (Logger.getLog());
  }
}

function CUST_customercalendercreation(CSRC_conn,CSRC_customerid, calenderIDcode,CSRC_firstname, CSRC_lastname, CSRC_mobile, CSRC_intmobile, CSRC_office, CSRC_customermailid, CSRC_unit,CSRC_roomtype,CREATE_finalcaleventsarray)
{
  var cal = CalendarApp.getCalendarsByName(calenderIDcode)[0];
  for(var g=0;g<CREATE_finalcaleventsarray.length;g++)
  {
    var createeventdetails=CREATE_finalcaleventsarray[g];
    var startdate=createeventdetails[2];
    var start_time_in=createeventdetails[3];
    var start_time_out=createeventdetails[4]
    var roomtype=createeventdetails[1];
    var unit=createeventdetails[0]
    var diffstatus=createeventdetails[5];
    var eventstatus=createeventdetails[6];
    var startevents=eilib.CalenderTime_Convertion(calenderIDcode,startdate, start_time_in, start_time_out)
    var calendername= CSRC_firstname+' '+CSRC_lastname;
    var contactno="";
    var contactaddr="";
    if(diffstatus!=undefined || diffstatus!=null)
    {
      var diffroomunit=diffstatus
      }
    else
    {
      diffroomunit="";
    }
    if(CSRC_mobile!=null && CSRC_mobile!='')
    {contactno=CSRC_mobile;}
    else if(CSRC_intmobile!=null  && CSRC_intmobile!='')
    {contactno=CSRC_intmobile;}
    else if(CSRC_office!=null && CSRC_office!='')
    {contactno=CSRC_office;}
    if(contactno!="")
    {
      contactaddr=CSRC_customerid+" "+"EMAIL :"+CSRC_customermailid+",CONTACT NO :"+contactno;
    }
    else
    {
      contactaddr=CSRC_customerid+" "+"EMAIL :"+CSRC_customermailid;
    }
    var details =unit+ " " + calendername + " " +diffroomunit+" "+eventstatus;
    var details1 =unit+ " " +roomtype ;
    
    var c= cal.createEvent(details, startevents[0], startevents[1], {description:contactaddr, location: details1});// event creation if more event on same date in startdate
  }
}
function CAL_DEL_CREATE(CSRC_conn,CSRC_customerid,status)
{
  var CTermExtn_tempstmt=CSRC_conn.createStatement();
  CTermExtn_tempstmt.execute("CALL SP_CUSTOMER_MIN_MAX_RV("+CSRC_customerid+",@MIN_LP,@MAX_LP)");
  CTermExtn_tempstmt.close();
  var CTermExtn_temptbl_stmt=CSRC_conn.createStatement();
  var CTermExtn_temptbl_query="SELECT @MIN_LP,@MAX_LP";
  var CTermExtn_temptblres=CTermExtn_temptbl_stmt.executeQuery(CTermExtn_temptbl_query);
  if(CTermExtn_temptblres.next())
  {
    var CSRC_MINRV=CTermExtn_temptblres.getString(1);
    if(CSRC_MINRV==null){CSRC_MINRV=1;}
    var CSRC_MAXRV=CTermExtn_temptblres.getString(2);
  }
  
  CTermExtn_temptblres.close();
  CTermExtn_temptbl_stmt.close();
  var CSRC_caldetailsstmt=CSRC_conn.createStatement();
  var CSRC_caldetailsquery="SELECT C.CUSTOMER_FIRST_NAME,C.CUSTOMER_LAST_NAME,CED.CED_REC_VER,CTD.CLP_GUEST_CARD,CTD.CLP_STARTDATE,CTD.CLP_ENDDATE,CTD.CLP_PRETERMINATE_DATE,CPD.CPD_MOBILE,CPD.CPD_INTL_MOBILE,CCD.CCD_OFFICE_NO,CPD.CPD_EMAIL,U.UNIT_NO,URTD.URTD_ROOM_TYPE,CTPA.CTP_DATA AS CED_SD_STIME, CTPB.CTP_DATA AS CED_SD_ETIME,CTPC.CTP_DATA AS CED_ED_STIME, CTPD.CTP_DATA AS CED_ED_ETIME FROM  CUSTOMER_ENTRY_DETAILS CED LEFT JOIN CUSTOMER_TIME_PROFILE CTPA ON CED.CED_SD_STIME = CTPA.CTP_ID LEFT JOIN CUSTOMER_TIME_PROFILE CTPB ON CED.CED_SD_ETIME = CTPB.CTP_ID LEFT JOIN CUSTOMER_TIME_PROFILE CTPC ON CED.CED_ED_STIME = CTPC.CTP_ID LEFT JOIN CUSTOMER_TIME_PROFILE CTPD ON CED.CED_ED_ETIME = CTPD.CTP_ID LEFT JOIN CUSTOMER_COMPANY_DETAILS CCD ON CED.CUSTOMER_ID=CCD.CUSTOMER_ID LEFT JOIN  CUSTOMER_PERSONAL_DETAILS CPD ON CED.CUSTOMER_ID=CPD.CUSTOMER_ID,CUSTOMER_LP_DETAILS CTD,UNIT_ROOM_TYPE_DETAILS URTD, UNIT_ACCESS_STAMP_DETAILS UASD ,UNIT U,CUSTOMER C WHERE  CED.UNIT_ID=U.UNIT_ID AND CED.CUSTOMER_ID="+CSRC_customerid+" AND (CTD.CUSTOMER_ID=CED.CUSTOMER_ID) AND (CED.CED_REC_VER=CTD.CED_REC_VER) AND (CTD.CLP_GUEST_CARD IS NULL) AND CED.CED_CANCEL_DATE IS  NULL AND(UASD.UASD_ID=CED.UASD_ID) AND(UASD.URTD_ID=URTD.URTD_ID)  AND (C.CUSTOMER_ID=CED.CUSTOMER_ID) AND (CTD.CUSTOMER_ID=C.CUSTOMER_ID) AND (CED.CED_REC_VER BETWEEN "+CSRC_MINRV+" AND "+CSRC_MAXRV+") AND CTD.CLP_GUEST_CARD IS NULL ORDER BY CED.CED_REC_VER, CTD.CLP_GUEST_CARD ASC";
  var CSRC_caldetailsresult=CSRC_caldetailsstmt.executeQuery(CSRC_caldetailsquery);
  var calevents_array=[];  
  while(CSRC_caldetailsresult.next())
  {
    var CSRC_calunit=CSRC_caldetailsresult.getString("UNIT_NO");
    var CSRC_calsddate=CSRC_caldetailsresult.getString("CLP_STARTDATE");
    var CSRC_caleddate=CSRC_caldetailsresult.getString("CLP_ENDDATE");
    var CSRC_cal_ptddate=CSRC_caldetailsresult.getString("CLP_PRETERMINATE_DATE");
    var CSRC_SD_start_time_in=CSRC_caldetailsresult.getString("CED_SD_STIME");
    var CSRC_SD_start_time_out=CSRC_caldetailsresult.getString("CED_SD_ETIME");
    var CSRC_ED_end_time_in=CSRC_caldetailsresult.getString("CED_ED_STIME");
    var CSRC_ED_end_time_out=CSRC_caldetailsresult.getString("CED_ED_ETIME");
    var CSRC_calroomtype=CSRC_caldetailsresult.getString("URTD_ROOM_TYPE");
    if(CSRC_cal_ptddate!=null)
    {
      CSRC_caleddate=CSRC_cal_ptddate;
    }
    var sddate=CSRC_calsddate.split('-');
    var sd_date=new Date(sddate[0],sddate[1]-1,sddate[2]);
    var eddate=CSRC_caleddate.split('-');
    var ed_date=new Date(eddate[0],eddate[1]-1,eddate[2]);
    if(sd_date<ed_date)
    {
      calevents_array.push({unit:CSRC_calunit,roomtype:CSRC_calroomtype,sdate:CSRC_calsddate,stime:CSRC_SD_start_time_in,etime:CSRC_SD_start_time_out});
      calevents_array.push({unit:CSRC_calunit,roomtype:CSRC_calroomtype,sdate:CSRC_caleddate,stime:CSRC_ED_end_time_in,etime:CSRC_ED_end_time_out});
    }
  }
  CSRC_caldetailsresult.close();
  var DELETE_finalcaleventsarray=[];
  var CREATE_finalcaleventsarray=[];
  for(var j=0;j<calevents_array.length;j++)
  {
    var c_eventdetails=calevents_array[j];
    if(j==0 || j==calevents_array.length-1)
    {
      if(j==0)
      {
        var roomstatus='';
        var eventstatus="CHECKIN";
        CREATE_finalcaleventsarray.push([c_eventdetails.unit,c_eventdetails.roomtype,c_eventdetails.sdate,c_eventdetails.stime,c_eventdetails.etime,roomstatus,eventstatus])
        DELETE_finalcaleventsarray.push([c_eventdetails.sdate,c_eventdetails.stime,c_eventdetails.etime]);
      }
      else
      {
        var roomstatus='';
        eventstatus="CHECKOUT";
        CREATE_finalcaleventsarray.push([c_eventdetails.unit,c_eventdetails.roomtype,c_eventdetails.sdate,c_eventdetails.stime,c_eventdetails.etime,roomstatus,eventstatus])
        DELETE_finalcaleventsarray.push([c_eventdetails.sdate,c_eventdetails.stime,c_eventdetails.etime]);
      }
    }
    else
    {
      var p_eventdetails=calevents_array[j-1];
      if(c_eventdetails.unit==p_eventdetails.unit && c_eventdetails.roomtype!=p_eventdetails.roomtype)
      {
        roomstatus='DIFF RM';
        eventstatus="CHECKIN";
        CREATE_finalcaleventsarray.push([c_eventdetails.unit,c_eventdetails.roomtype,c_eventdetails.sdate,c_eventdetails.stime,c_eventdetails.etime,roomstatus,eventstatus])
        DELETE_finalcaleventsarray.push([c_eventdetails.sdate,c_eventdetails.stime,c_eventdetails.etime])
      }
      if(c_eventdetails.unit!=p_eventdetails.unit)
      {
        roomstatus='DIFF UNIT';
        eventstatus="CHECKIN";
        CREATE_finalcaleventsarray.push([c_eventdetails.unit,c_eventdetails.roomtype,c_eventdetails.sdate,c_eventdetails.stime,c_eventdetails.etime,roomstatus,eventstatus])
        DELETE_finalcaleventsarray.push([c_eventdetails.sdate,c_eventdetails.stime,c_eventdetails.etime])
      }
    }
  }
  return [DELETE_finalcaleventsarray,CREATE_finalcaleventsarray];
}
function CUST_customercalenderdeletion(customer_id,calenderIDcode,calevent_array)
{
  var cal = CalendarApp.getCalendarsByName(calenderIDcode)[0]; 
  for(var c=0;c<calevent_array.length;c++)
  {
    var eventdetails=calevent_array[c];
    var startevents=eilib.CalenderTime_Convertion(calenderIDcode,eventdetails[0], eventdetails[1], eventdetails[2]);
    var startevent_deletion=cal.getEvents(startevents[0], startevents[1]);//getting start date event from calendar
    for(var q=0;q<startevent_deletion.length;q++)
    {
      if(startevent_deletion[q])
      {
        var start_desc=startevent_deletion[q].getDescription();
        var ev_title=startevent_deletion[q].getTitle();
        start_desc=start_desc.split(' ');
        if(parseInt(start_desc[0]) == customer_id)
        {
          startevent_deletion[q].deleteEvent(); // Deleting events if any edit occure
        }
      }
    }  
  }
}
